// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vr.proto

#ifndef PROTOBUF_vr_2eproto__INCLUDED
#define PROTOBUF_vr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class Activity;
class ActivityDefaultTypeInternal;
extern ActivityDefaultTypeInternal _Activity_default_instance_;
class Config;
class ConfigDefaultTypeInternal;
extern ConfigDefaultTypeInternal _Config_default_instance_;
class Coupon;
class CouponDefaultTypeInternal;
extern CouponDefaultTypeInternal _Coupon_default_instance_;
class DayPrice;
class DayPriceDefaultTypeInternal;
extern DayPriceDefaultTypeInternal _DayPrice_default_instance_;
class DayPrice_PeriodPrice;
class DayPrice_PeriodPriceDefaultTypeInternal;
extern DayPrice_PeriodPriceDefaultTypeInternal _DayPrice_PeriodPrice_default_instance_;
class DeviceInfo;
class DeviceInfoDefaultTypeInternal;
extern DeviceInfoDefaultTypeInternal _DeviceInfo_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Notification;
class NotificationDefaultTypeInternal;
extern NotificationDefaultTypeInternal _Notification_default_instance_;
class PricePolicy;
class PricePolicyDefaultTypeInternal;
extern PricePolicyDefaultTypeInternal _PricePolicy_default_instance_;
class RemoteControl;
class RemoteControlDefaultTypeInternal;
extern RemoteControlDefaultTypeInternal _RemoteControl_default_instance_;
class StoreList;
class StoreListDefaultTypeInternal;
extern StoreListDefaultTypeInternal _StoreList_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;

namespace protobuf_vr_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_vr_2eproto

// ===================================================================

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string method = 2;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // string deviceId = 4;
  void clear_deviceid();
  static const int kDeviceIdFieldNumber = 4;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // bytes content = 5;
  void clear_content();
  static const int kContentFieldNumber = 5;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // string returnMsg = 7;
  void clear_returnmsg();
  static const int kReturnMsgFieldNumber = 7;
  const ::std::string& returnmsg() const;
  void set_returnmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_returnmsg(::std::string&& value);
  #endif
  void set_returnmsg(const char* value);
  void set_returnmsg(const char* value, size_t size);
  ::std::string* mutable_returnmsg();
  ::std::string* release_returnmsg();
  void set_allocated_returnmsg(::std::string* returnmsg);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int32 storeId = 3;
  void clear_storeid();
  static const int kStoreIdFieldNumber = 3;
  ::google::protobuf::int32 storeid() const;
  void set_storeid(::google::protobuf::int32 value);

  // int32 returnCode = 6;
  void clear_returncode();
  static const int kReturnCodeFieldNumber = 6;
  ::google::protobuf::int32 returncode() const;
  void set_returncode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr returnmsg_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 storeid_;
  ::google::protobuf::int32 returncode_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class StoreList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StoreList) */ {
 public:
  StoreList();
  virtual ~StoreList();

  StoreList(const StoreList& from);

  inline StoreList& operator=(const StoreList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreList& default_instance();

  static inline const StoreList* internal_default_instance() {
    return reinterpret_cast<const StoreList*>(
               &_StoreList_default_instance_);
  }

  void Swap(StoreList* other);

  // implements Message ----------------------------------------------

  inline StoreList* New() const PROTOBUF_FINAL { return New(NULL); }

  StoreList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StoreList& from);
  void MergeFrom(const StoreList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StoreList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, string> stores = 1;
  int stores_size() const;
  void clear_stores();
  static const int kStoresFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
      stores() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
      mutable_stores();

  // @@protoc_insertion_point(class_scope:StoreList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      StoreList_StoresEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > stores_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DeviceInfo) */ {
 public:
  DeviceInfo();
  virtual ~DeviceInfo();

  DeviceInfo(const DeviceInfo& from);

  inline DeviceInfo& operator=(const DeviceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceInfo& default_instance();

  static inline const DeviceInfo* internal_default_instance() {
    return reinterpret_cast<const DeviceInfo*>(
               &_DeviceInfo_default_instance_);
  }

  void Swap(DeviceInfo* other);

  // implements Message ----------------------------------------------

  inline DeviceInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DeviceInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeviceInfo& from);
  void MergeFrom(const DeviceInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeviceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string deviceId = 2;
  void clear_deviceid();
  static const int kDeviceIdFieldNumber = 2;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string deviceName = 3;
  void clear_devicename();
  static const int kDeviceNameFieldNumber = 3;
  const ::std::string& devicename() const;
  void set_devicename(const ::std::string& value);
  #if LANG_CXX11
  void set_devicename(::std::string&& value);
  #endif
  void set_devicename(const char* value);
  void set_devicename(const char* value, size_t size);
  ::std::string* mutable_devicename();
  ::std::string* release_devicename();
  void set_allocated_devicename(::std::string* devicename);

  // int32 storeId = 1;
  void clear_storeid();
  static const int kStoreIdFieldNumber = 1;
  ::google::protobuf::int32 storeid() const;
  void set_storeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DeviceInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr devicename_;
  ::google::protobuf::int32 storeid_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  inline UserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Coupon coupons = 6;
  int coupons_size() const;
  void clear_coupons();
  static const int kCouponsFieldNumber = 6;
  const ::Coupon& coupons(int index) const;
  ::Coupon* mutable_coupons(int index);
  ::Coupon* add_coupons();
  ::google::protobuf::RepeatedPtrField< ::Coupon >*
      mutable_coupons();
  const ::google::protobuf::RepeatedPtrField< ::Coupon >&
      coupons() const;

  // string openid = 1;
  void clear_openid();
  static const int kOpenidFieldNumber = 1;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  #if LANG_CXX11
  void set_openid(::std::string&& value);
  #endif
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // string headimgUrl = 3;
  void clear_headimgurl();
  static const int kHeadimgUrlFieldNumber = 3;
  const ::std::string& headimgurl() const;
  void set_headimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_headimgurl(::std::string&& value);
  #endif
  void set_headimgurl(const char* value);
  void set_headimgurl(const char* value, size_t size);
  ::std::string* mutable_headimgurl();
  ::std::string* release_headimgurl();
  void set_allocated_headimgurl(::std::string* headimgurl);

  // float balance = 4;
  void clear_balance();
  static const int kBalanceFieldNumber = 4;
  float balance() const;
  void set_balance(float value);

  // int32 playMinutes = 5;
  void clear_playminutes();
  static const int kPlayMinutesFieldNumber = 5;
  ::google::protobuf::int32 playminutes() const;
  void set_playminutes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Coupon > coupons_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr headimgurl_;
  float balance_;
  ::google::protobuf::int32 playminutes_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Config) */ {
 public:
  Config();
  virtual ~Config();

  Config(const Config& from);

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Config& default_instance();

  static inline const Config* internal_default_instance() {
    return reinterpret_cast<const Config*>(
               &_Config_default_instance_);
  }

  void Swap(Config* other);

  // implements Message ----------------------------------------------

  inline Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Config& from);
  void MergeFrom(const Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Notification notices = 4;
  int notices_size() const;
  void clear_notices();
  static const int kNoticesFieldNumber = 4;
  const ::Notification& notices(int index) const;
  ::Notification* mutable_notices(int index);
  ::Notification* add_notices();
  ::google::protobuf::RepeatedPtrField< ::Notification >*
      mutable_notices();
  const ::google::protobuf::RepeatedPtrField< ::Notification >&
      notices() const;

  // string storeName = 1;
  void clear_storename();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& storename() const;
  void set_storename(const ::std::string& value);
  #if LANG_CXX11
  void set_storename(::std::string&& value);
  #endif
  void set_storename(const char* value);
  void set_storename(const char* value, size_t size);
  ::std::string* mutable_storename();
  ::std::string* release_storename();
  void set_allocated_storename(::std::string* storename);

  // int32 storeId = 2;
  void clear_storeid();
  static const int kStoreIdFieldNumber = 2;
  ::google::protobuf::int32 storeid() const;
  void set_storeid(::google::protobuf::int32 value);

  // int32 freeMinutes = 3;
  void clear_freeminutes();
  static const int kFreeMinutesFieldNumber = 3;
  ::google::protobuf::int32 freeminutes() const;
  void set_freeminutes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Notification > notices_;
  ::google::protobuf::internal::ArenaStringPtr storename_;
  ::google::protobuf::int32 storeid_;
  ::google::protobuf::int32 freeminutes_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Notification) */ {
 public:
  Notification();
  virtual ~Notification();

  Notification(const Notification& from);

  inline Notification& operator=(const Notification& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Notification& default_instance();

  static inline const Notification* internal_default_instance() {
    return reinterpret_cast<const Notification*>(
               &_Notification_default_instance_);
  }

  void Swap(Notification* other);

  // implements Message ----------------------------------------------

  inline Notification* New() const PROTOBUF_FINAL { return New(NULL); }

  Notification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Notification& from);
  void MergeFrom(const Notification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes image = 3;
  void clear_image();
  static const int kImageFieldNumber = 3;
  const ::std::string& image() const;
  void set_image(const ::std::string& value);
  #if LANG_CXX11
  void set_image(::std::string&& value);
  #endif
  void set_image(const char* value);
  void set_image(const void* value, size_t size);
  ::std::string* mutable_image();
  ::std::string* release_image();
  void set_allocated_image(::std::string* image);

  // string Url = 4;
  void clear_url();
  static const int kUrlFieldNumber = 4;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Notification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr image_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoteControl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoteControl) */ {
 public:
  RemoteControl();
  virtual ~RemoteControl();

  RemoteControl(const RemoteControl& from);

  inline RemoteControl& operator=(const RemoteControl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteControl& default_instance();

  static inline const RemoteControl* internal_default_instance() {
    return reinterpret_cast<const RemoteControl*>(
               &_RemoteControl_default_instance_);
  }

  void Swap(RemoteControl* other);

  // implements Message ----------------------------------------------

  inline RemoteControl* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoteControl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoteControl& from);
  void MergeFrom(const RemoteControl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoteControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  ::google::protobuf::int32 action() const;
  void set_action(::google::protobuf::int32 value);

  // int32 command = 2;
  void clear_command();
  static const int kCommandFieldNumber = 2;
  ::google::protobuf::int32 command() const;
  void set_command(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RemoteControl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 action_;
  ::google::protobuf::int32 command_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Coupon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Coupon) */ {
 public:
  Coupon();
  virtual ~Coupon();

  Coupon(const Coupon& from);

  inline Coupon& operator=(const Coupon& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Coupon& default_instance();

  static inline const Coupon* internal_default_instance() {
    return reinterpret_cast<const Coupon*>(
               &_Coupon_default_instance_);
  }

  void Swap(Coupon* other);

  // implements Message ----------------------------------------------

  inline Coupon* New() const PROTOBUF_FINAL { return New(NULL); }

  Coupon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Coupon& from);
  void MergeFrom(const Coupon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Coupon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string comment = 4;
  void clear_comment();
  static const int kCommentFieldNumber = 4;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // float price = 2;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  float price() const;
  void set_price(float value);

  // float discounts = 3;
  void clear_discounts();
  static const int kDiscountsFieldNumber = 3;
  float discounts() const;
  void set_discounts(float value);

  // @@protoc_insertion_point(class_scope:Coupon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::int32 type_;
  float price_;
  float discounts_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Activity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Activity) */ {
 public:
  Activity();
  virtual ~Activity();

  Activity(const Activity& from);

  inline Activity& operator=(const Activity& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity& default_instance();

  static inline const Activity* internal_default_instance() {
    return reinterpret_cast<const Activity*>(
               &_Activity_default_instance_);
  }

  void Swap(Activity* other);

  // implements Message ----------------------------------------------

  inline Activity* New() const PROTOBUF_FINAL { return New(NULL); }

  Activity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Activity& from);
  void MergeFrom(const Activity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Activity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string comment = 3;
  void clear_comment();
  static const int kCommentFieldNumber = 3;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // .Coupon coupon = 2;
  bool has_coupon() const;
  void clear_coupon();
  static const int kCouponFieldNumber = 2;
  const ::Coupon& coupon() const;
  ::Coupon* mutable_coupon();
  ::Coupon* release_coupon();
  void set_allocated_coupon(::Coupon* coupon);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Activity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::Coupon* coupon_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PricePolicy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PricePolicy) */ {
 public:
  PricePolicy();
  virtual ~PricePolicy();

  PricePolicy(const PricePolicy& from);

  inline PricePolicy& operator=(const PricePolicy& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PricePolicy& default_instance();

  static inline const PricePolicy* internal_default_instance() {
    return reinterpret_cast<const PricePolicy*>(
               &_PricePolicy_default_instance_);
  }

  void Swap(PricePolicy* other);

  // implements Message ----------------------------------------------

  inline PricePolicy* New() const PROTOBUF_FINAL { return New(NULL); }

  PricePolicy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PricePolicy& from);
  void MergeFrom(const PricePolicy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PricePolicy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .DayPrice> dayPrices = 1;
  int dayprices_size() const;
  void clear_dayprices();
  static const int kDayPricesFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::DayPrice >&
      dayprices() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::DayPrice >*
      mutable_dayprices();

  // @@protoc_insertion_point(class_scope:PricePolicy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::DayPrice,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      PricePolicy_DayPricesEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::DayPrice,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > dayprices_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class DayPrice_PeriodPrice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DayPrice.PeriodPrice) */ {
 public:
  DayPrice_PeriodPrice();
  virtual ~DayPrice_PeriodPrice();

  DayPrice_PeriodPrice(const DayPrice_PeriodPrice& from);

  inline DayPrice_PeriodPrice& operator=(const DayPrice_PeriodPrice& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DayPrice_PeriodPrice& default_instance();

  static inline const DayPrice_PeriodPrice* internal_default_instance() {
    return reinterpret_cast<const DayPrice_PeriodPrice*>(
               &_DayPrice_PeriodPrice_default_instance_);
  }

  void Swap(DayPrice_PeriodPrice* other);

  // implements Message ----------------------------------------------

  inline DayPrice_PeriodPrice* New() const PROTOBUF_FINAL { return New(NULL); }

  DayPrice_PeriodPrice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DayPrice_PeriodPrice& from);
  void MergeFrom(const DayPrice_PeriodPrice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DayPrice_PeriodPrice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, int32> prices = 3;
  int prices_size() const;
  void clear_prices();
  static const int kPricesFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      prices() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_prices();

  // int32 beginTime = 1;
  void clear_begintime();
  static const int kBeginTimeFieldNumber = 1;
  ::google::protobuf::int32 begintime() const;
  void set_begintime(::google::protobuf::int32 value);

  // int32 endTime = 2;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 2;
  ::google::protobuf::int32 endtime() const;
  void set_endtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DayPrice.PeriodPrice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      DayPrice_PeriodPrice_PricesEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > prices_;
  ::google::protobuf::int32 begintime_;
  ::google::protobuf::int32 endtime_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DayPrice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DayPrice) */ {
 public:
  DayPrice();
  virtual ~DayPrice();

  DayPrice(const DayPrice& from);

  inline DayPrice& operator=(const DayPrice& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DayPrice& default_instance();

  static inline const DayPrice* internal_default_instance() {
    return reinterpret_cast<const DayPrice*>(
               &_DayPrice_default_instance_);
  }

  void Swap(DayPrice* other);

  // implements Message ----------------------------------------------

  inline DayPrice* New() const PROTOBUF_FINAL { return New(NULL); }

  DayPrice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DayPrice& from);
  void MergeFrom(const DayPrice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DayPrice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DayPrice_PeriodPrice PeriodPrice;

  // accessors -------------------------------------------------------

  // repeated .DayPrice.PeriodPrice periodPrices = 1;
  int periodprices_size() const;
  void clear_periodprices();
  static const int kPeriodPricesFieldNumber = 1;
  const ::DayPrice_PeriodPrice& periodprices(int index) const;
  ::DayPrice_PeriodPrice* mutable_periodprices(int index);
  ::DayPrice_PeriodPrice* add_periodprices();
  ::google::protobuf::RepeatedPtrField< ::DayPrice_PeriodPrice >*
      mutable_periodprices();
  const ::google::protobuf::RepeatedPtrField< ::DayPrice_PeriodPrice >&
      periodprices() const;

  // @@protoc_insertion_point(class_scope:DayPrice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::DayPrice_PeriodPrice > periodprices_;
  mutable int _cached_size_;
  friend struct  protobuf_vr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// int64 id = 1;
inline void Message::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::id() const {
  // @@protoc_insertion_point(field_get:Message.id)
  return id_;
}
inline void Message::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Message.id)
}

// string method = 2;
inline void Message::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::method() const {
  // @@protoc_insertion_point(field_get:Message.method)
  return method_.GetNoArena();
}
inline void Message::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.method)
}
#if LANG_CXX11
inline void Message::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.method)
}
#endif
inline void Message::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.method)
}
inline void Message::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.method)
}
inline ::std::string* Message::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:Message.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_method() {
  // @@protoc_insertion_point(field_release:Message.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:Message.method)
}

// int32 storeId = 3;
inline void Message::clear_storeid() {
  storeid_ = 0;
}
inline ::google::protobuf::int32 Message::storeid() const {
  // @@protoc_insertion_point(field_get:Message.storeId)
  return storeid_;
}
inline void Message::set_storeid(::google::protobuf::int32 value) {
  
  storeid_ = value;
  // @@protoc_insertion_point(field_set:Message.storeId)
}

// string deviceId = 4;
inline void Message::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::deviceid() const {
  // @@protoc_insertion_point(field_get:Message.deviceId)
  return deviceid_.GetNoArena();
}
inline void Message::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.deviceId)
}
#if LANG_CXX11
inline void Message::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.deviceId)
}
#endif
inline void Message::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.deviceId)
}
inline void Message::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.deviceId)
}
inline ::std::string* Message::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:Message.deviceId)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_deviceid() {
  // @@protoc_insertion_point(field_release:Message.deviceId)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:Message.deviceId)
}

// bytes content = 5;
inline void Message::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::content() const {
  // @@protoc_insertion_point(field_get:Message.content)
  return content_.GetNoArena();
}
inline void Message::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.content)
}
#if LANG_CXX11
inline void Message::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.content)
}
#endif
inline void Message::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.content)
}
inline void Message::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.content)
}
inline ::std::string* Message::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:Message.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_content() {
  // @@protoc_insertion_point(field_release:Message.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Message.content)
}

// int32 returnCode = 6;
inline void Message::clear_returncode() {
  returncode_ = 0;
}
inline ::google::protobuf::int32 Message::returncode() const {
  // @@protoc_insertion_point(field_get:Message.returnCode)
  return returncode_;
}
inline void Message::set_returncode(::google::protobuf::int32 value) {
  
  returncode_ = value;
  // @@protoc_insertion_point(field_set:Message.returnCode)
}

// string returnMsg = 7;
inline void Message::clear_returnmsg() {
  returnmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::returnmsg() const {
  // @@protoc_insertion_point(field_get:Message.returnMsg)
  return returnmsg_.GetNoArena();
}
inline void Message::set_returnmsg(const ::std::string& value) {
  
  returnmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.returnMsg)
}
#if LANG_CXX11
inline void Message::set_returnmsg(::std::string&& value) {
  
  returnmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.returnMsg)
}
#endif
inline void Message::set_returnmsg(const char* value) {
  
  returnmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.returnMsg)
}
inline void Message::set_returnmsg(const char* value, size_t size) {
  
  returnmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.returnMsg)
}
inline ::std::string* Message::mutable_returnmsg() {
  
  // @@protoc_insertion_point(field_mutable:Message.returnMsg)
  return returnmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_returnmsg() {
  // @@protoc_insertion_point(field_release:Message.returnMsg)
  
  return returnmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_returnmsg(::std::string* returnmsg) {
  if (returnmsg != NULL) {
    
  } else {
    
  }
  returnmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), returnmsg);
  // @@protoc_insertion_point(field_set_allocated:Message.returnMsg)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StoreList

// map<int32, string> stores = 1;
inline int StoreList::stores_size() const {
  return stores_.size();
}
inline void StoreList::clear_stores() {
  stores_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
StoreList::stores() const {
  // @@protoc_insertion_point(field_map:StoreList.stores)
  return stores_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
StoreList::mutable_stores() {
  // @@protoc_insertion_point(field_mutable_map:StoreList.stores)
  return stores_.MutableMap();
}

// -------------------------------------------------------------------

// DeviceInfo

// int32 storeId = 1;
inline void DeviceInfo::clear_storeid() {
  storeid_ = 0;
}
inline ::google::protobuf::int32 DeviceInfo::storeid() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.storeId)
  return storeid_;
}
inline void DeviceInfo::set_storeid(::google::protobuf::int32 value) {
  
  storeid_ = value;
  // @@protoc_insertion_point(field_set:DeviceInfo.storeId)
}

// string deviceId = 2;
inline void DeviceInfo::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeviceInfo::deviceid() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.deviceId)
  return deviceid_.GetNoArena();
}
inline void DeviceInfo::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeviceInfo.deviceId)
}
#if LANG_CXX11
inline void DeviceInfo::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeviceInfo.deviceId)
}
#endif
inline void DeviceInfo::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeviceInfo.deviceId)
}
inline void DeviceInfo::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeviceInfo.deviceId)
}
inline ::std::string* DeviceInfo::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:DeviceInfo.deviceId)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceInfo::release_deviceid() {
  // @@protoc_insertion_point(field_release:DeviceInfo.deviceId)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceInfo::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:DeviceInfo.deviceId)
}

// string deviceName = 3;
inline void DeviceInfo::clear_devicename() {
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeviceInfo::devicename() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.deviceName)
  return devicename_.GetNoArena();
}
inline void DeviceInfo::set_devicename(const ::std::string& value) {
  
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeviceInfo.deviceName)
}
#if LANG_CXX11
inline void DeviceInfo::set_devicename(::std::string&& value) {
  
  devicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeviceInfo.deviceName)
}
#endif
inline void DeviceInfo::set_devicename(const char* value) {
  
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeviceInfo.deviceName)
}
inline void DeviceInfo::set_devicename(const char* value, size_t size) {
  
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeviceInfo.deviceName)
}
inline ::std::string* DeviceInfo::mutable_devicename() {
  
  // @@protoc_insertion_point(field_mutable:DeviceInfo.deviceName)
  return devicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceInfo::release_devicename() {
  // @@protoc_insertion_point(field_release:DeviceInfo.deviceName)
  
  return devicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceInfo::set_allocated_devicename(::std::string* devicename) {
  if (devicename != NULL) {
    
  } else {
    
  }
  devicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicename);
  // @@protoc_insertion_point(field_set_allocated:DeviceInfo.deviceName)
}

// -------------------------------------------------------------------

// UserInfo

// string openid = 1;
inline void UserInfo::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::openid() const {
  // @@protoc_insertion_point(field_get:UserInfo.openid)
  return openid_.GetNoArena();
}
inline void UserInfo::set_openid(const ::std::string& value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserInfo.openid)
}
#if LANG_CXX11
inline void UserInfo::set_openid(::std::string&& value) {
  
  openid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserInfo.openid)
}
#endif
inline void UserInfo::set_openid(const char* value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserInfo.openid)
}
inline void UserInfo::set_openid(const char* value, size_t size) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserInfo.openid)
}
inline ::std::string* UserInfo::mutable_openid() {
  
  // @@protoc_insertion_point(field_mutable:UserInfo.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_openid() {
  // @@protoc_insertion_point(field_release:UserInfo.openid)
  
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    
  } else {
    
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:UserInfo.openid)
}

// string nickname = 2;
inline void UserInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::nickname() const {
  // @@protoc_insertion_point(field_get:UserInfo.nickname)
  return nickname_.GetNoArena();
}
inline void UserInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserInfo.nickname)
}
#if LANG_CXX11
inline void UserInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserInfo.nickname)
}
#endif
inline void UserInfo::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserInfo.nickname)
}
inline void UserInfo::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserInfo.nickname)
}
inline ::std::string* UserInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:UserInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:UserInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:UserInfo.nickname)
}

// string headimgUrl = 3;
inline void UserInfo::clear_headimgurl() {
  headimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::headimgurl() const {
  // @@protoc_insertion_point(field_get:UserInfo.headimgUrl)
  return headimgurl_.GetNoArena();
}
inline void UserInfo::set_headimgurl(const ::std::string& value) {
  
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserInfo.headimgUrl)
}
#if LANG_CXX11
inline void UserInfo::set_headimgurl(::std::string&& value) {
  
  headimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserInfo.headimgUrl)
}
#endif
inline void UserInfo::set_headimgurl(const char* value) {
  
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserInfo.headimgUrl)
}
inline void UserInfo::set_headimgurl(const char* value, size_t size) {
  
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserInfo.headimgUrl)
}
inline ::std::string* UserInfo::mutable_headimgurl() {
  
  // @@protoc_insertion_point(field_mutable:UserInfo.headimgUrl)
  return headimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_headimgurl() {
  // @@protoc_insertion_point(field_release:UserInfo.headimgUrl)
  
  return headimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_headimgurl(::std::string* headimgurl) {
  if (headimgurl != NULL) {
    
  } else {
    
  }
  headimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimgurl);
  // @@protoc_insertion_point(field_set_allocated:UserInfo.headimgUrl)
}

// float balance = 4;
inline void UserInfo::clear_balance() {
  balance_ = 0;
}
inline float UserInfo::balance() const {
  // @@protoc_insertion_point(field_get:UserInfo.balance)
  return balance_;
}
inline void UserInfo::set_balance(float value) {
  
  balance_ = value;
  // @@protoc_insertion_point(field_set:UserInfo.balance)
}

// int32 playMinutes = 5;
inline void UserInfo::clear_playminutes() {
  playminutes_ = 0;
}
inline ::google::protobuf::int32 UserInfo::playminutes() const {
  // @@protoc_insertion_point(field_get:UserInfo.playMinutes)
  return playminutes_;
}
inline void UserInfo::set_playminutes(::google::protobuf::int32 value) {
  
  playminutes_ = value;
  // @@protoc_insertion_point(field_set:UserInfo.playMinutes)
}

// repeated .Coupon coupons = 6;
inline int UserInfo::coupons_size() const {
  return coupons_.size();
}
inline void UserInfo::clear_coupons() {
  coupons_.Clear();
}
inline const ::Coupon& UserInfo::coupons(int index) const {
  // @@protoc_insertion_point(field_get:UserInfo.coupons)
  return coupons_.Get(index);
}
inline ::Coupon* UserInfo::mutable_coupons(int index) {
  // @@protoc_insertion_point(field_mutable:UserInfo.coupons)
  return coupons_.Mutable(index);
}
inline ::Coupon* UserInfo::add_coupons() {
  // @@protoc_insertion_point(field_add:UserInfo.coupons)
  return coupons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Coupon >*
UserInfo::mutable_coupons() {
  // @@protoc_insertion_point(field_mutable_list:UserInfo.coupons)
  return &coupons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Coupon >&
UserInfo::coupons() const {
  // @@protoc_insertion_point(field_list:UserInfo.coupons)
  return coupons_;
}

// -------------------------------------------------------------------

// Config

// string storeName = 1;
inline void Config::clear_storename() {
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config::storename() const {
  // @@protoc_insertion_point(field_get:Config.storeName)
  return storename_.GetNoArena();
}
inline void Config::set_storename(const ::std::string& value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Config.storeName)
}
#if LANG_CXX11
inline void Config::set_storename(::std::string&& value) {
  
  storename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Config.storeName)
}
#endif
inline void Config::set_storename(const char* value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Config.storeName)
}
inline void Config::set_storename(const char* value, size_t size) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Config.storeName)
}
inline ::std::string* Config::mutable_storename() {
  
  // @@protoc_insertion_point(field_mutable:Config.storeName)
  return storename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config::release_storename() {
  // @@protoc_insertion_point(field_release:Config.storeName)
  
  return storename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_allocated_storename(::std::string* storename) {
  if (storename != NULL) {
    
  } else {
    
  }
  storename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storename);
  // @@protoc_insertion_point(field_set_allocated:Config.storeName)
}

// int32 storeId = 2;
inline void Config::clear_storeid() {
  storeid_ = 0;
}
inline ::google::protobuf::int32 Config::storeid() const {
  // @@protoc_insertion_point(field_get:Config.storeId)
  return storeid_;
}
inline void Config::set_storeid(::google::protobuf::int32 value) {
  
  storeid_ = value;
  // @@protoc_insertion_point(field_set:Config.storeId)
}

// int32 freeMinutes = 3;
inline void Config::clear_freeminutes() {
  freeminutes_ = 0;
}
inline ::google::protobuf::int32 Config::freeminutes() const {
  // @@protoc_insertion_point(field_get:Config.freeMinutes)
  return freeminutes_;
}
inline void Config::set_freeminutes(::google::protobuf::int32 value) {
  
  freeminutes_ = value;
  // @@protoc_insertion_point(field_set:Config.freeMinutes)
}

// repeated .Notification notices = 4;
inline int Config::notices_size() const {
  return notices_.size();
}
inline void Config::clear_notices() {
  notices_.Clear();
}
inline const ::Notification& Config::notices(int index) const {
  // @@protoc_insertion_point(field_get:Config.notices)
  return notices_.Get(index);
}
inline ::Notification* Config::mutable_notices(int index) {
  // @@protoc_insertion_point(field_mutable:Config.notices)
  return notices_.Mutable(index);
}
inline ::Notification* Config::add_notices() {
  // @@protoc_insertion_point(field_add:Config.notices)
  return notices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Notification >*
Config::mutable_notices() {
  // @@protoc_insertion_point(field_mutable_list:Config.notices)
  return &notices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Notification >&
Config::notices() const {
  // @@protoc_insertion_point(field_list:Config.notices)
  return notices_;
}

// -------------------------------------------------------------------

// Notification

// int32 type = 1;
inline void Notification::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Notification::type() const {
  // @@protoc_insertion_point(field_get:Notification.type)
  return type_;
}
inline void Notification::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Notification.type)
}

// string msg = 2;
inline void Notification::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Notification::msg() const {
  // @@protoc_insertion_point(field_get:Notification.msg)
  return msg_.GetNoArena();
}
inline void Notification::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Notification.msg)
}
#if LANG_CXX11
inline void Notification::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Notification.msg)
}
#endif
inline void Notification::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Notification.msg)
}
inline void Notification::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Notification.msg)
}
inline ::std::string* Notification::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:Notification.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_msg() {
  // @@protoc_insertion_point(field_release:Notification.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:Notification.msg)
}

// bytes image = 3;
inline void Notification::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Notification::image() const {
  // @@protoc_insertion_point(field_get:Notification.image)
  return image_.GetNoArena();
}
inline void Notification::set_image(const ::std::string& value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Notification.image)
}
#if LANG_CXX11
inline void Notification::set_image(::std::string&& value) {
  
  image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Notification.image)
}
#endif
inline void Notification::set_image(const char* value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Notification.image)
}
inline void Notification::set_image(const void* value, size_t size) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Notification.image)
}
inline ::std::string* Notification::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:Notification.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_image() {
  // @@protoc_insertion_point(field_release:Notification.image)
  
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:Notification.image)
}

// string Url = 4;
inline void Notification::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Notification::url() const {
  // @@protoc_insertion_point(field_get:Notification.Url)
  return url_.GetNoArena();
}
inline void Notification::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Notification.Url)
}
#if LANG_CXX11
inline void Notification::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Notification.Url)
}
#endif
inline void Notification::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Notification.Url)
}
inline void Notification::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Notification.Url)
}
inline ::std::string* Notification::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:Notification.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_url() {
  // @@protoc_insertion_point(field_release:Notification.Url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:Notification.Url)
}

// -------------------------------------------------------------------

// RemoteControl

// int32 action = 1;
inline void RemoteControl::clear_action() {
  action_ = 0;
}
inline ::google::protobuf::int32 RemoteControl::action() const {
  // @@protoc_insertion_point(field_get:RemoteControl.action)
  return action_;
}
inline void RemoteControl::set_action(::google::protobuf::int32 value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:RemoteControl.action)
}

// int32 command = 2;
inline void RemoteControl::clear_command() {
  command_ = 0;
}
inline ::google::protobuf::int32 RemoteControl::command() const {
  // @@protoc_insertion_point(field_get:RemoteControl.command)
  return command_;
}
inline void RemoteControl::set_command(::google::protobuf::int32 value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:RemoteControl.command)
}

// -------------------------------------------------------------------

// Coupon

// int32 type = 1;
inline void Coupon::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Coupon::type() const {
  // @@protoc_insertion_point(field_get:Coupon.type)
  return type_;
}
inline void Coupon::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Coupon.type)
}

// float price = 2;
inline void Coupon::clear_price() {
  price_ = 0;
}
inline float Coupon::price() const {
  // @@protoc_insertion_point(field_get:Coupon.price)
  return price_;
}
inline void Coupon::set_price(float value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:Coupon.price)
}

// float discounts = 3;
inline void Coupon::clear_discounts() {
  discounts_ = 0;
}
inline float Coupon::discounts() const {
  // @@protoc_insertion_point(field_get:Coupon.discounts)
  return discounts_;
}
inline void Coupon::set_discounts(float value) {
  
  discounts_ = value;
  // @@protoc_insertion_point(field_set:Coupon.discounts)
}

// string comment = 4;
inline void Coupon::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Coupon::comment() const {
  // @@protoc_insertion_point(field_get:Coupon.comment)
  return comment_.GetNoArena();
}
inline void Coupon::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Coupon.comment)
}
#if LANG_CXX11
inline void Coupon::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Coupon.comment)
}
#endif
inline void Coupon::set_comment(const char* value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Coupon.comment)
}
inline void Coupon::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Coupon.comment)
}
inline ::std::string* Coupon::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:Coupon.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Coupon::release_comment() {
  // @@protoc_insertion_point(field_release:Coupon.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Coupon::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:Coupon.comment)
}

// -------------------------------------------------------------------

// Activity

// int32 type = 1;
inline void Activity::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Activity::type() const {
  // @@protoc_insertion_point(field_get:Activity.type)
  return type_;
}
inline void Activity::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Activity.type)
}

// .Coupon coupon = 2;
inline bool Activity::has_coupon() const {
  return this != internal_default_instance() && coupon_ != NULL;
}
inline void Activity::clear_coupon() {
  if (GetArenaNoVirtual() == NULL && coupon_ != NULL) delete coupon_;
  coupon_ = NULL;
}
inline const ::Coupon& Activity::coupon() const {
  // @@protoc_insertion_point(field_get:Activity.coupon)
  return coupon_ != NULL ? *coupon_
                         : *::Coupon::internal_default_instance();
}
inline ::Coupon* Activity::mutable_coupon() {
  
  if (coupon_ == NULL) {
    coupon_ = new ::Coupon;
  }
  // @@protoc_insertion_point(field_mutable:Activity.coupon)
  return coupon_;
}
inline ::Coupon* Activity::release_coupon() {
  // @@protoc_insertion_point(field_release:Activity.coupon)
  
  ::Coupon* temp = coupon_;
  coupon_ = NULL;
  return temp;
}
inline void Activity::set_allocated_coupon(::Coupon* coupon) {
  delete coupon_;
  coupon_ = coupon;
  if (coupon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Activity.coupon)
}

// string comment = 3;
inline void Activity::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Activity::comment() const {
  // @@protoc_insertion_point(field_get:Activity.comment)
  return comment_.GetNoArena();
}
inline void Activity::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Activity.comment)
}
#if LANG_CXX11
inline void Activity::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Activity.comment)
}
#endif
inline void Activity::set_comment(const char* value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Activity.comment)
}
inline void Activity::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Activity.comment)
}
inline ::std::string* Activity::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:Activity.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Activity::release_comment() {
  // @@protoc_insertion_point(field_release:Activity.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Activity::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:Activity.comment)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PricePolicy

// map<int32, .DayPrice> dayPrices = 1;
inline int PricePolicy::dayprices_size() const {
  return dayprices_.size();
}
inline void PricePolicy::clear_dayprices() {
  dayprices_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::DayPrice >&
PricePolicy::dayprices() const {
  // @@protoc_insertion_point(field_map:PricePolicy.dayPrices)
  return dayprices_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::DayPrice >*
PricePolicy::mutable_dayprices() {
  // @@protoc_insertion_point(field_mutable_map:PricePolicy.dayPrices)
  return dayprices_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DayPrice_PeriodPrice

// int32 beginTime = 1;
inline void DayPrice_PeriodPrice::clear_begintime() {
  begintime_ = 0;
}
inline ::google::protobuf::int32 DayPrice_PeriodPrice::begintime() const {
  // @@protoc_insertion_point(field_get:DayPrice.PeriodPrice.beginTime)
  return begintime_;
}
inline void DayPrice_PeriodPrice::set_begintime(::google::protobuf::int32 value) {
  
  begintime_ = value;
  // @@protoc_insertion_point(field_set:DayPrice.PeriodPrice.beginTime)
}

// int32 endTime = 2;
inline void DayPrice_PeriodPrice::clear_endtime() {
  endtime_ = 0;
}
inline ::google::protobuf::int32 DayPrice_PeriodPrice::endtime() const {
  // @@protoc_insertion_point(field_get:DayPrice.PeriodPrice.endTime)
  return endtime_;
}
inline void DayPrice_PeriodPrice::set_endtime(::google::protobuf::int32 value) {
  
  endtime_ = value;
  // @@protoc_insertion_point(field_set:DayPrice.PeriodPrice.endTime)
}

// map<int32, int32> prices = 3;
inline int DayPrice_PeriodPrice::prices_size() const {
  return prices_.size();
}
inline void DayPrice_PeriodPrice::clear_prices() {
  prices_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
DayPrice_PeriodPrice::prices() const {
  // @@protoc_insertion_point(field_map:DayPrice.PeriodPrice.prices)
  return prices_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
DayPrice_PeriodPrice::mutable_prices() {
  // @@protoc_insertion_point(field_mutable_map:DayPrice.PeriodPrice.prices)
  return prices_.MutableMap();
}

// -------------------------------------------------------------------

// DayPrice

// repeated .DayPrice.PeriodPrice periodPrices = 1;
inline int DayPrice::periodprices_size() const {
  return periodprices_.size();
}
inline void DayPrice::clear_periodprices() {
  periodprices_.Clear();
}
inline const ::DayPrice_PeriodPrice& DayPrice::periodprices(int index) const {
  // @@protoc_insertion_point(field_get:DayPrice.periodPrices)
  return periodprices_.Get(index);
}
inline ::DayPrice_PeriodPrice* DayPrice::mutable_periodprices(int index) {
  // @@protoc_insertion_point(field_mutable:DayPrice.periodPrices)
  return periodprices_.Mutable(index);
}
inline ::DayPrice_PeriodPrice* DayPrice::add_periodprices() {
  // @@protoc_insertion_point(field_add:DayPrice.periodPrices)
  return periodprices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DayPrice_PeriodPrice >*
DayPrice::mutable_periodprices() {
  // @@protoc_insertion_point(field_mutable_list:DayPrice.periodPrices)
  return &periodprices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DayPrice_PeriodPrice >&
DayPrice::periodprices() const {
  // @@protoc_insertion_point(field_list:DayPrice.periodPrices)
  return periodprices_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vr_2eproto__INCLUDED
