// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "vr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class AuthInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AuthInfo> {
} _AuthInfo_default_instance_;
class ConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Config> {
} _Config_default_instance_;
class NotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Notification> {
} _Notification_default_instance_;
class PeriodPriceListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PeriodPriceList> {
} _PeriodPriceList_default_instance_;
class PeriodPriceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PeriodPrice> {
} _PeriodPrice_default_instance_;
class PriceGroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PriceGroup> {
} _PriceGroup_default_instance_;
class PriceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Price> {
} _Price_default_instance_;
class BillDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Bill> {
} _Bill_default_instance_;
class UserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserInfo> {
} _UserInfo_default_instance_;
class CouponDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Coupon> {
} _Coupon_default_instance_;
class StoreListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StoreList> {
} _StoreList_default_instance_;
class DeviceInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceInfo> {
} _DeviceInfo_default_instance_;
class RemoteControlDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RemoteControl> {
} _RemoteControl_default_instance_;
class ActivityDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Activity> {
} _Activity_default_instance_;

namespace protobuf_vr_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[15];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthInfo, storeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthInfo, when_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthInfo, sign_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, storename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, freeminutes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, notices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeriodPriceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeriodPriceList, periodprices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeriodPrice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeriodPrice, timekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeriodPrice, pricegroup_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceGroup, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceGroup, prices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Price, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Price, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Price, money_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bill, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bill, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bill, consume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bill, duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, openid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, headimage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, coupons_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coupon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coupon, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coupon, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coupon, discounts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coupon, comment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreList, stores_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInfo, storeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInfo, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInfo, devicename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteControl, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteControl, command_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, coupon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, comment_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(AuthInfo)},
  { 7, -1, sizeof(Config)},
  { 14, -1, sizeof(Notification)},
  { 22, -1, sizeof(PeriodPriceList)},
  { 27, -1, sizeof(PeriodPrice)},
  { 33, -1, sizeof(PriceGroup)},
  { 39, -1, sizeof(Price)},
  { 45, -1, sizeof(Bill)},
  { 52, -1, sizeof(UserInfo)},
  { 62, -1, sizeof(Coupon)},
  { 70, -1, sizeof(StoreList)},
  { 75, -1, sizeof(DeviceInfo)},
  { 82, -1, sizeof(RemoteControl)},
  { 88, -1, sizeof(Activity)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AuthInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PeriodPriceList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PeriodPrice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PriceGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Price_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bill_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Coupon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StoreList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoteControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Activity_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "vr.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
  const ::google::protobuf::Descriptor* StoreList_StoresEntry_descriptor = protobuf_vr_2eproto::file_level_metadata[10].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        StoreList_StoresEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                StoreList_StoresEntry_descriptor));
}

}  // namespace

void TableStruct::Shutdown() {
  _AuthInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Config_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Notification_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _PeriodPriceList_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _PeriodPrice_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _PriceGroup_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Price_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Bill_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _UserInfo_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _Coupon_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _StoreList_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _DeviceInfo_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _RemoteControl_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _Activity_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AuthInfo_default_instance_.DefaultConstruct();
  _Config_default_instance_.DefaultConstruct();
  _Notification_default_instance_.DefaultConstruct();
  _PeriodPriceList_default_instance_.DefaultConstruct();
  _PeriodPrice_default_instance_.DefaultConstruct();
  _PriceGroup_default_instance_.DefaultConstruct();
  _Price_default_instance_.DefaultConstruct();
  _Bill_default_instance_.DefaultConstruct();
  _UserInfo_default_instance_.DefaultConstruct();
  _Coupon_default_instance_.DefaultConstruct();
  _StoreList_default_instance_.DefaultConstruct();
  _DeviceInfo_default_instance_.DefaultConstruct();
  _RemoteControl_default_instance_.DefaultConstruct();
  _Activity_default_instance_.DefaultConstruct();
  _PeriodPrice_default_instance_.get_mutable()->pricegroup_ = const_cast< ::PriceGroup*>(
      ::PriceGroup::internal_default_instance());
  _Activity_default_instance_.get_mutable()->coupon_ = const_cast< ::Coupon*>(
      ::Coupon::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\010vr.proto\"7\n\010AuthInfo\022\017\n\007storeID\030\001 \001(\003\022"
      "\014\n\004when\030\002 \001(\t\022\014\n\004sign\030\003 \001(\t\"P\n\006Config\022\021\n"
      "\tstoreName\030\001 \001(\t\022\023\n\013freeMinutes\030\002 \001(\005\022\036\n"
      "\007notices\030\003 \003(\0132\r.Notification\"E\n\014Notific"
      "ation\022\014\n\004type\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\r\n\005imag"
      "e\030\003 \001(\014\022\013\n\003Url\030\004 \001(\t\"5\n\017PeriodPriceList\022"
      "\"\n\014periodPrices\030\001 \003(\0132\014.PeriodPrice\"\?\n\013P"
      "eriodPrice\022\017\n\007timeKey\030\001 \001(\005\022\037\n\npriceGrou"
      "p\030\002 \001(\0132\013.PriceGroup\"2\n\nPriceGroup\022\014\n\004na"
      "me\030\002 \001(\t\022\026\n\006prices\030\003 \003(\0132\006.Price\"(\n\005Pric"
      "e\022\020\n\010duration\030\001 \001(\005\022\r\n\005money\030\002 \001(\005\":\n\004Bi"
      "ll\022\017\n\007balance\030\001 \001(\005\022\017\n\007consume\030\002 \001(\005\022\020\n\010"
      "duration\030\003 \001(\005\"z\n\010UserInfo\022\016\n\006userID\030\001 \001"
      "(\003\022\016\n\006openid\030\002 \001(\t\022\020\n\010nickname\030\003 \001(\t\022\021\n\t"
      "headImage\030\004 \001(\014\022\017\n\007balance\030\005 \001(\002\022\030\n\007coup"
      "ons\030\006 \003(\0132\007.Coupon\"I\n\006Coupon\022\014\n\004type\030\001 \001"
      "(\005\022\r\n\005price\030\002 \001(\002\022\021\n\tdiscounts\030\003 \001(\002\022\017\n\007"
      "comment\030\004 \001(\t\"b\n\tStoreList\022&\n\006stores\030\001 \003"
      "(\0132\026.StoreList.StoresEntry\032-\n\013StoresEntr"
      "y\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\t:\0028\001\"C\n\nDev"
      "iceInfo\022\017\n\007storeId\030\001 \001(\005\022\020\n\010deviceId\030\002 \001"
      "(\t\022\022\n\ndeviceName\030\003 \001(\t\"0\n\rRemoteControl\022"
      "\016\n\006action\030\001 \001(\005\022\017\n\007command\030\002 \001(\005\"B\n\010Acti"
      "vity\022\014\n\004type\030\001 \001(\005\022\027\n\006coupon\030\002 \001(\0132\007.Cou"
      "pon\022\017\n\007comment\030\003 \001(\tB-\n\031com.oddmu.vrdrea"
      "mer.protoB\020MessageMsgProtosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1035);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vr.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_vr_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthInfo::kStoreIDFieldNumber;
const int AuthInfo::kWhenFieldNumber;
const int AuthInfo::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthInfo::AuthInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AuthInfo)
}
AuthInfo::AuthInfo(const AuthInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  when_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.when().size() > 0) {
    when_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.when_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  storeid_ = from.storeid_;
  // @@protoc_insertion_point(copy_constructor:AuthInfo)
}

void AuthInfo::SharedCtor() {
  when_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storeid_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

AuthInfo::~AuthInfo() {
  // @@protoc_insertion_point(destructor:AuthInfo)
  SharedDtor();
}

void AuthInfo::SharedDtor() {
  when_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthInfo::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[0].descriptor;
}

const AuthInfo& AuthInfo::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

AuthInfo* AuthInfo::New(::google::protobuf::Arena* arena) const {
  AuthInfo* n = new AuthInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AuthInfo)
  when_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storeid_ = GOOGLE_LONGLONG(0);
}

bool AuthInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AuthInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 storeID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &storeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string when = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_when()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->when().data(), this->when().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthInfo.when"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthInfo.sign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AuthInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AuthInfo)
  return false;
#undef DO_
}

void AuthInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AuthInfo)
  // int64 storeID = 1;
  if (this->storeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->storeid(), output);
  }

  // string when = 2;
  if (this->when().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->when().data(), this->when().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthInfo.when");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->when(), output);
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthInfo.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sign(), output);
  }

  // @@protoc_insertion_point(serialize_end:AuthInfo)
}

::google::protobuf::uint8* AuthInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AuthInfo)
  // int64 storeID = 1;
  if (this->storeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->storeid(), target);
  }

  // string when = 2;
  if (this->when().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->when().data(), this->when().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthInfo.when");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->when(), target);
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthInfo.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sign(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AuthInfo)
  return target;
}

size_t AuthInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AuthInfo)
  size_t total_size = 0;

  // string when = 2;
  if (this->when().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->when());
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  // int64 storeID = 1;
  if (this->storeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->storeid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AuthInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AuthInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AuthInfo)
    MergeFrom(*source);
  }
}

void AuthInfo::MergeFrom(const AuthInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AuthInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.when().size() > 0) {

    when_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.when_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.storeid() != 0) {
    set_storeid(from.storeid());
  }
}

void AuthInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AuthInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthInfo::CopyFrom(const AuthInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AuthInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthInfo::IsInitialized() const {
  return true;
}

void AuthInfo::Swap(AuthInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthInfo::InternalSwap(AuthInfo* other) {
  when_.Swap(&other->when_);
  sign_.Swap(&other->sign_);
  std::swap(storeid_, other->storeid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthInfo::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthInfo

// int64 storeID = 1;
void AuthInfo::clear_storeid() {
  storeid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AuthInfo::storeid() const {
  // @@protoc_insertion_point(field_get:AuthInfo.storeID)
  return storeid_;
}
void AuthInfo::set_storeid(::google::protobuf::int64 value) {
  
  storeid_ = value;
  // @@protoc_insertion_point(field_set:AuthInfo.storeID)
}

// string when = 2;
void AuthInfo::clear_when() {
  when_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthInfo::when() const {
  // @@protoc_insertion_point(field_get:AuthInfo.when)
  return when_.GetNoArena();
}
void AuthInfo::set_when(const ::std::string& value) {
  
  when_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AuthInfo.when)
}
#if LANG_CXX11
void AuthInfo::set_when(::std::string&& value) {
  
  when_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AuthInfo.when)
}
#endif
void AuthInfo::set_when(const char* value) {
  
  when_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AuthInfo.when)
}
void AuthInfo::set_when(const char* value, size_t size) {
  
  when_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AuthInfo.when)
}
::std::string* AuthInfo::mutable_when() {
  
  // @@protoc_insertion_point(field_mutable:AuthInfo.when)
  return when_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthInfo::release_when() {
  // @@protoc_insertion_point(field_release:AuthInfo.when)
  
  return when_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthInfo::set_allocated_when(::std::string* when) {
  if (when != NULL) {
    
  } else {
    
  }
  when_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), when);
  // @@protoc_insertion_point(field_set_allocated:AuthInfo.when)
}

// string sign = 3;
void AuthInfo::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthInfo::sign() const {
  // @@protoc_insertion_point(field_get:AuthInfo.sign)
  return sign_.GetNoArena();
}
void AuthInfo::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AuthInfo.sign)
}
#if LANG_CXX11
void AuthInfo::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AuthInfo.sign)
}
#endif
void AuthInfo::set_sign(const char* value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AuthInfo.sign)
}
void AuthInfo::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AuthInfo.sign)
}
::std::string* AuthInfo::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:AuthInfo.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthInfo::release_sign() {
  // @@protoc_insertion_point(field_release:AuthInfo.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthInfo::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:AuthInfo.sign)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config::kStoreNameFieldNumber;
const int Config::kFreeMinutesFieldNumber;
const int Config::kNoticesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config::Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Config)
}
Config::Config(const Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notices_(from.notices_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  storename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.storename().size() > 0) {
    storename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storename_);
  }
  freeminutes_ = from.freeminutes_;
  // @@protoc_insertion_point(copy_constructor:Config)
}

void Config::SharedCtor() {
  storename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  freeminutes_ = 0;
  _cached_size_ = 0;
}

Config::~Config() {
  // @@protoc_insertion_point(destructor:Config)
  SharedDtor();
}

void Config::SharedDtor() {
  storename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Config::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[1].descriptor;
}

const Config& Config::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Config* Config::New(::google::protobuf::Arena* arena) const {
  Config* n = new Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:Config)
  notices_.Clear();
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  freeminutes_ = 0;
}

bool Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string storeName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->storename().data(), this->storename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Config.storeName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 freeMinutes = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &freeminutes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Notification notices = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_notices()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Config)
  return false;
#undef DO_
}

void Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Config)
  // string storeName = 1;
  if (this->storename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storename().data(), this->storename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Config.storeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->storename(), output);
  }

  // int32 freeMinutes = 2;
  if (this->freeminutes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->freeminutes(), output);
  }

  // repeated .Notification notices = 3;
  for (unsigned int i = 0, n = this->notices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->notices(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Config)
}

::google::protobuf::uint8* Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Config)
  // string storeName = 1;
  if (this->storename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storename().data(), this->storename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Config.storeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->storename(), target);
  }

  // int32 freeMinutes = 2;
  if (this->freeminutes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->freeminutes(), target);
  }

  // repeated .Notification notices = 3;
  for (unsigned int i = 0, n = this->notices_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->notices(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Config)
  return target;
}

size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config)
  size_t total_size = 0;

  // repeated .Notification notices = 3;
  {
    unsigned int count = this->notices_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notices(i));
    }
  }

  // string storeName = 1;
  if (this->storename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->storename());
  }

  // int32 freeMinutes = 2;
  if (this->freeminutes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->freeminutes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config)
    MergeFrom(*source);
  }
}

void Config::MergeFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  notices_.MergeFrom(from.notices_);
  if (from.storename().size() > 0) {

    storename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storename_);
  }
  if (from.freeminutes() != 0) {
    set_freeminutes(from.freeminutes());
  }
}

void Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config::IsInitialized() const {
  return true;
}

void Config::Swap(Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config::InternalSwap(Config* other) {
  notices_.UnsafeArenaSwap(&other->notices_);
  storename_.Swap(&other->storename_);
  std::swap(freeminutes_, other->freeminutes_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Config::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Config

// string storeName = 1;
void Config::clear_storename() {
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Config::storename() const {
  // @@protoc_insertion_point(field_get:Config.storeName)
  return storename_.GetNoArena();
}
void Config::set_storename(const ::std::string& value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Config.storeName)
}
#if LANG_CXX11
void Config::set_storename(::std::string&& value) {
  
  storename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Config.storeName)
}
#endif
void Config::set_storename(const char* value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Config.storeName)
}
void Config::set_storename(const char* value, size_t size) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Config.storeName)
}
::std::string* Config::mutable_storename() {
  
  // @@protoc_insertion_point(field_mutable:Config.storeName)
  return storename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Config::release_storename() {
  // @@protoc_insertion_point(field_release:Config.storeName)
  
  return storename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_allocated_storename(::std::string* storename) {
  if (storename != NULL) {
    
  } else {
    
  }
  storename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storename);
  // @@protoc_insertion_point(field_set_allocated:Config.storeName)
}

// int32 freeMinutes = 2;
void Config::clear_freeminutes() {
  freeminutes_ = 0;
}
::google::protobuf::int32 Config::freeminutes() const {
  // @@protoc_insertion_point(field_get:Config.freeMinutes)
  return freeminutes_;
}
void Config::set_freeminutes(::google::protobuf::int32 value) {
  
  freeminutes_ = value;
  // @@protoc_insertion_point(field_set:Config.freeMinutes)
}

// repeated .Notification notices = 3;
int Config::notices_size() const {
  return notices_.size();
}
void Config::clear_notices() {
  notices_.Clear();
}
const ::Notification& Config::notices(int index) const {
  // @@protoc_insertion_point(field_get:Config.notices)
  return notices_.Get(index);
}
::Notification* Config::mutable_notices(int index) {
  // @@protoc_insertion_point(field_mutable:Config.notices)
  return notices_.Mutable(index);
}
::Notification* Config::add_notices() {
  // @@protoc_insertion_point(field_add:Config.notices)
  return notices_.Add();
}
::google::protobuf::RepeatedPtrField< ::Notification >*
Config::mutable_notices() {
  // @@protoc_insertion_point(field_mutable_list:Config.notices)
  return &notices_;
}
const ::google::protobuf::RepeatedPtrField< ::Notification >&
Config::notices() const {
  // @@protoc_insertion_point(field_list:Config.notices)
  return notices_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Notification::kTypeFieldNumber;
const int Notification::kMsgFieldNumber;
const int Notification::kImageFieldNumber;
const int Notification::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Notification::Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Notification)
}
Notification::Notification(const Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image().size() > 0) {
    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:Notification)
}

void Notification::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

Notification::~Notification() {
  // @@protoc_insertion_point(destructor:Notification)
  SharedDtor();
}

void Notification::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Notification::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[2].descriptor;
}

const Notification& Notification::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Notification* Notification::New(::google::protobuf::Arena* arena) const {
  Notification* n = new Notification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:Notification)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Notification.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes image = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Url = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Notification.Url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Notification)
  return false;
#undef DO_
}

void Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Notification)
  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Notification.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // bytes image = 3;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->image(), output);
  }

  // string Url = 4;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Notification.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->url(), output);
  }

  // @@protoc_insertion_point(serialize_end:Notification)
}

::google::protobuf::uint8* Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Notification)
  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Notification.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // bytes image = 3;
  if (this->image().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->image(), target);
  }

  // string Url = 4;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Notification.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->url(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Notification)
  return target;
}

size_t Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Notification)
  size_t total_size = 0;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // bytes image = 3;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->image());
  }

  // string Url = 4;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Notification)
    MergeFrom(*source);
  }
}

void Notification::MergeFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notification::CopyFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notification::IsInitialized() const {
  return true;
}

void Notification::Swap(Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Notification::InternalSwap(Notification* other) {
  msg_.Swap(&other->msg_);
  image_.Swap(&other->image_);
  url_.Swap(&other->url_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Notification::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Notification

// int32 type = 1;
void Notification::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 Notification::type() const {
  // @@protoc_insertion_point(field_get:Notification.type)
  return type_;
}
void Notification::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Notification.type)
}

// string msg = 2;
void Notification::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Notification::msg() const {
  // @@protoc_insertion_point(field_get:Notification.msg)
  return msg_.GetNoArena();
}
void Notification::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Notification.msg)
}
#if LANG_CXX11
void Notification::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Notification.msg)
}
#endif
void Notification::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Notification.msg)
}
void Notification::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Notification.msg)
}
::std::string* Notification::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:Notification.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Notification::release_msg() {
  // @@protoc_insertion_point(field_release:Notification.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Notification::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:Notification.msg)
}

// bytes image = 3;
void Notification::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Notification::image() const {
  // @@protoc_insertion_point(field_get:Notification.image)
  return image_.GetNoArena();
}
void Notification::set_image(const ::std::string& value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Notification.image)
}
#if LANG_CXX11
void Notification::set_image(::std::string&& value) {
  
  image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Notification.image)
}
#endif
void Notification::set_image(const char* value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Notification.image)
}
void Notification::set_image(const void* value, size_t size) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Notification.image)
}
::std::string* Notification::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:Notification.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Notification::release_image() {
  // @@protoc_insertion_point(field_release:Notification.image)
  
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Notification::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:Notification.image)
}

// string Url = 4;
void Notification::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Notification::url() const {
  // @@protoc_insertion_point(field_get:Notification.Url)
  return url_.GetNoArena();
}
void Notification::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Notification.Url)
}
#if LANG_CXX11
void Notification::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Notification.Url)
}
#endif
void Notification::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Notification.Url)
}
void Notification::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Notification.Url)
}
::std::string* Notification::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:Notification.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Notification::release_url() {
  // @@protoc_insertion_point(field_release:Notification.Url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Notification::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:Notification.Url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeriodPriceList::kPeriodPricesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeriodPriceList::PeriodPriceList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PeriodPriceList)
}
PeriodPriceList::PeriodPriceList(const PeriodPriceList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      periodprices_(from.periodprices_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PeriodPriceList)
}

void PeriodPriceList::SharedCtor() {
  _cached_size_ = 0;
}

PeriodPriceList::~PeriodPriceList() {
  // @@protoc_insertion_point(destructor:PeriodPriceList)
  SharedDtor();
}

void PeriodPriceList::SharedDtor() {
}

void PeriodPriceList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeriodPriceList::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[3].descriptor;
}

const PeriodPriceList& PeriodPriceList::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

PeriodPriceList* PeriodPriceList::New(::google::protobuf::Arena* arena) const {
  PeriodPriceList* n = new PeriodPriceList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeriodPriceList::Clear() {
// @@protoc_insertion_point(message_clear_start:PeriodPriceList)
  periodprices_.Clear();
}

bool PeriodPriceList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PeriodPriceList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PeriodPrice periodPrices = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_periodprices()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PeriodPriceList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PeriodPriceList)
  return false;
#undef DO_
}

void PeriodPriceList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PeriodPriceList)
  // repeated .PeriodPrice periodPrices = 1;
  for (unsigned int i = 0, n = this->periodprices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->periodprices(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PeriodPriceList)
}

::google::protobuf::uint8* PeriodPriceList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PeriodPriceList)
  // repeated .PeriodPrice periodPrices = 1;
  for (unsigned int i = 0, n = this->periodprices_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->periodprices(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PeriodPriceList)
  return target;
}

size_t PeriodPriceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PeriodPriceList)
  size_t total_size = 0;

  // repeated .PeriodPrice periodPrices = 1;
  {
    unsigned int count = this->periodprices_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->periodprices(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PeriodPriceList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PeriodPriceList)
  GOOGLE_DCHECK_NE(&from, this);
  const PeriodPriceList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PeriodPriceList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PeriodPriceList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PeriodPriceList)
    MergeFrom(*source);
  }
}

void PeriodPriceList::MergeFrom(const PeriodPriceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PeriodPriceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  periodprices_.MergeFrom(from.periodprices_);
}

void PeriodPriceList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PeriodPriceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PeriodPriceList::CopyFrom(const PeriodPriceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PeriodPriceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeriodPriceList::IsInitialized() const {
  return true;
}

void PeriodPriceList::Swap(PeriodPriceList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeriodPriceList::InternalSwap(PeriodPriceList* other) {
  periodprices_.UnsafeArenaSwap(&other->periodprices_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PeriodPriceList::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PeriodPriceList

// repeated .PeriodPrice periodPrices = 1;
int PeriodPriceList::periodprices_size() const {
  return periodprices_.size();
}
void PeriodPriceList::clear_periodprices() {
  periodprices_.Clear();
}
const ::PeriodPrice& PeriodPriceList::periodprices(int index) const {
  // @@protoc_insertion_point(field_get:PeriodPriceList.periodPrices)
  return periodprices_.Get(index);
}
::PeriodPrice* PeriodPriceList::mutable_periodprices(int index) {
  // @@protoc_insertion_point(field_mutable:PeriodPriceList.periodPrices)
  return periodprices_.Mutable(index);
}
::PeriodPrice* PeriodPriceList::add_periodprices() {
  // @@protoc_insertion_point(field_add:PeriodPriceList.periodPrices)
  return periodprices_.Add();
}
::google::protobuf::RepeatedPtrField< ::PeriodPrice >*
PeriodPriceList::mutable_periodprices() {
  // @@protoc_insertion_point(field_mutable_list:PeriodPriceList.periodPrices)
  return &periodprices_;
}
const ::google::protobuf::RepeatedPtrField< ::PeriodPrice >&
PeriodPriceList::periodprices() const {
  // @@protoc_insertion_point(field_list:PeriodPriceList.periodPrices)
  return periodprices_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeriodPrice::kTimeKeyFieldNumber;
const int PeriodPrice::kPriceGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeriodPrice::PeriodPrice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PeriodPrice)
}
PeriodPrice::PeriodPrice(const PeriodPrice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pricegroup()) {
    pricegroup_ = new ::PriceGroup(*from.pricegroup_);
  } else {
    pricegroup_ = NULL;
  }
  timekey_ = from.timekey_;
  // @@protoc_insertion_point(copy_constructor:PeriodPrice)
}

void PeriodPrice::SharedCtor() {
  ::memset(&pricegroup_, 0, reinterpret_cast<char*>(&timekey_) -
    reinterpret_cast<char*>(&pricegroup_) + sizeof(timekey_));
  _cached_size_ = 0;
}

PeriodPrice::~PeriodPrice() {
  // @@protoc_insertion_point(destructor:PeriodPrice)
  SharedDtor();
}

void PeriodPrice::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pricegroup_;
  }
}

void PeriodPrice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeriodPrice::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[4].descriptor;
}

const PeriodPrice& PeriodPrice::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

PeriodPrice* PeriodPrice::New(::google::protobuf::Arena* arena) const {
  PeriodPrice* n = new PeriodPrice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeriodPrice::Clear() {
// @@protoc_insertion_point(message_clear_start:PeriodPrice)
  if (GetArenaNoVirtual() == NULL && pricegroup_ != NULL) {
    delete pricegroup_;
  }
  pricegroup_ = NULL;
  timekey_ = 0;
}

bool PeriodPrice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PeriodPrice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 timeKey = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timekey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PriceGroup priceGroup = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pricegroup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PeriodPrice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PeriodPrice)
  return false;
#undef DO_
}

void PeriodPrice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PeriodPrice)
  // int32 timeKey = 1;
  if (this->timekey() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timekey(), output);
  }

  // .PriceGroup priceGroup = 2;
  if (this->has_pricegroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pricegroup_, output);
  }

  // @@protoc_insertion_point(serialize_end:PeriodPrice)
}

::google::protobuf::uint8* PeriodPrice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PeriodPrice)
  // int32 timeKey = 1;
  if (this->timekey() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timekey(), target);
  }

  // .PriceGroup priceGroup = 2;
  if (this->has_pricegroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pricegroup_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PeriodPrice)
  return target;
}

size_t PeriodPrice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PeriodPrice)
  size_t total_size = 0;

  // .PriceGroup priceGroup = 2;
  if (this->has_pricegroup()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pricegroup_);
  }

  // int32 timeKey = 1;
  if (this->timekey() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timekey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PeriodPrice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PeriodPrice)
  GOOGLE_DCHECK_NE(&from, this);
  const PeriodPrice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PeriodPrice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PeriodPrice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PeriodPrice)
    MergeFrom(*source);
  }
}

void PeriodPrice::MergeFrom(const PeriodPrice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PeriodPrice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pricegroup()) {
    mutable_pricegroup()->::PriceGroup::MergeFrom(from.pricegroup());
  }
  if (from.timekey() != 0) {
    set_timekey(from.timekey());
  }
}

void PeriodPrice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PeriodPrice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PeriodPrice::CopyFrom(const PeriodPrice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PeriodPrice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeriodPrice::IsInitialized() const {
  return true;
}

void PeriodPrice::Swap(PeriodPrice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeriodPrice::InternalSwap(PeriodPrice* other) {
  std::swap(pricegroup_, other->pricegroup_);
  std::swap(timekey_, other->timekey_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PeriodPrice::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PeriodPrice

// int32 timeKey = 1;
void PeriodPrice::clear_timekey() {
  timekey_ = 0;
}
::google::protobuf::int32 PeriodPrice::timekey() const {
  // @@protoc_insertion_point(field_get:PeriodPrice.timeKey)
  return timekey_;
}
void PeriodPrice::set_timekey(::google::protobuf::int32 value) {
  
  timekey_ = value;
  // @@protoc_insertion_point(field_set:PeriodPrice.timeKey)
}

// .PriceGroup priceGroup = 2;
bool PeriodPrice::has_pricegroup() const {
  return this != internal_default_instance() && pricegroup_ != NULL;
}
void PeriodPrice::clear_pricegroup() {
  if (GetArenaNoVirtual() == NULL && pricegroup_ != NULL) delete pricegroup_;
  pricegroup_ = NULL;
}
const ::PriceGroup& PeriodPrice::pricegroup() const {
  // @@protoc_insertion_point(field_get:PeriodPrice.priceGroup)
  return pricegroup_ != NULL ? *pricegroup_
                         : *::PriceGroup::internal_default_instance();
}
::PriceGroup* PeriodPrice::mutable_pricegroup() {
  
  if (pricegroup_ == NULL) {
    pricegroup_ = new ::PriceGroup;
  }
  // @@protoc_insertion_point(field_mutable:PeriodPrice.priceGroup)
  return pricegroup_;
}
::PriceGroup* PeriodPrice::release_pricegroup() {
  // @@protoc_insertion_point(field_release:PeriodPrice.priceGroup)
  
  ::PriceGroup* temp = pricegroup_;
  pricegroup_ = NULL;
  return temp;
}
void PeriodPrice::set_allocated_pricegroup(::PriceGroup* pricegroup) {
  delete pricegroup_;
  pricegroup_ = pricegroup;
  if (pricegroup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PeriodPrice.priceGroup)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriceGroup::kNameFieldNumber;
const int PriceGroup::kPricesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriceGroup::PriceGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PriceGroup)
}
PriceGroup::PriceGroup(const PriceGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      prices_(from.prices_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:PriceGroup)
}

void PriceGroup::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PriceGroup::~PriceGroup() {
  // @@protoc_insertion_point(destructor:PriceGroup)
  SharedDtor();
}

void PriceGroup::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PriceGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PriceGroup::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[5].descriptor;
}

const PriceGroup& PriceGroup::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

PriceGroup* PriceGroup::New(::google::protobuf::Arena* arena) const {
  PriceGroup* n = new PriceGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PriceGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:PriceGroup)
  prices_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PriceGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PriceGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PriceGroup.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Price prices = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_prices()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PriceGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PriceGroup)
  return false;
#undef DO_
}

void PriceGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PriceGroup)
  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PriceGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .Price prices = 3;
  for (unsigned int i = 0, n = this->prices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prices(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PriceGroup)
}

::google::protobuf::uint8* PriceGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PriceGroup)
  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PriceGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .Price prices = 3;
  for (unsigned int i = 0, n = this->prices_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->prices(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PriceGroup)
  return target;
}

size_t PriceGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PriceGroup)
  size_t total_size = 0;

  // repeated .Price prices = 3;
  {
    unsigned int count = this->prices_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prices(i));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PriceGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PriceGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const PriceGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PriceGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PriceGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PriceGroup)
    MergeFrom(*source);
  }
}

void PriceGroup::MergeFrom(const PriceGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PriceGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prices_.MergeFrom(from.prices_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PriceGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PriceGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriceGroup::CopyFrom(const PriceGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PriceGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriceGroup::IsInitialized() const {
  return true;
}

void PriceGroup::Swap(PriceGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriceGroup::InternalSwap(PriceGroup* other) {
  prices_.UnsafeArenaSwap(&other->prices_);
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PriceGroup::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PriceGroup

// string name = 2;
void PriceGroup::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PriceGroup::name() const {
  // @@protoc_insertion_point(field_get:PriceGroup.name)
  return name_.GetNoArena();
}
void PriceGroup::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PriceGroup.name)
}
#if LANG_CXX11
void PriceGroup::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PriceGroup.name)
}
#endif
void PriceGroup::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PriceGroup.name)
}
void PriceGroup::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PriceGroup.name)
}
::std::string* PriceGroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PriceGroup.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PriceGroup::release_name() {
  // @@protoc_insertion_point(field_release:PriceGroup.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PriceGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PriceGroup.name)
}

// repeated .Price prices = 3;
int PriceGroup::prices_size() const {
  return prices_.size();
}
void PriceGroup::clear_prices() {
  prices_.Clear();
}
const ::Price& PriceGroup::prices(int index) const {
  // @@protoc_insertion_point(field_get:PriceGroup.prices)
  return prices_.Get(index);
}
::Price* PriceGroup::mutable_prices(int index) {
  // @@protoc_insertion_point(field_mutable:PriceGroup.prices)
  return prices_.Mutable(index);
}
::Price* PriceGroup::add_prices() {
  // @@protoc_insertion_point(field_add:PriceGroup.prices)
  return prices_.Add();
}
::google::protobuf::RepeatedPtrField< ::Price >*
PriceGroup::mutable_prices() {
  // @@protoc_insertion_point(field_mutable_list:PriceGroup.prices)
  return &prices_;
}
const ::google::protobuf::RepeatedPtrField< ::Price >&
PriceGroup::prices() const {
  // @@protoc_insertion_point(field_list:PriceGroup.prices)
  return prices_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Price::kDurationFieldNumber;
const int Price::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Price::Price()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Price)
}
Price::Price(const Price& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&duration_, &from.duration_,
    reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&duration_) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:Price)
}

void Price::SharedCtor() {
  ::memset(&duration_, 0, reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&duration_) + sizeof(money_));
  _cached_size_ = 0;
}

Price::~Price() {
  // @@protoc_insertion_point(destructor:Price)
  SharedDtor();
}

void Price::SharedDtor() {
}

void Price::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Price::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[6].descriptor;
}

const Price& Price::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Price* Price::New(::google::protobuf::Arena* arena) const {
  Price* n = new Price;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Price::Clear() {
// @@protoc_insertion_point(message_clear_start:Price)
  ::memset(&duration_, 0, reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&duration_) + sizeof(money_));
}

bool Price::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Price)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 duration = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 money = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Price)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Price)
  return false;
#undef DO_
}

void Price::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Price)
  // int32 duration = 1;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->duration(), output);
  }

  // int32 money = 2;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money(), output);
  }

  // @@protoc_insertion_point(serialize_end:Price)
}

::google::protobuf::uint8* Price::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Price)
  // int32 duration = 1;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->duration(), target);
  }

  // int32 money = 2;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Price)
  return target;
}

size_t Price::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Price)
  size_t total_size = 0;

  // int32 duration = 1;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  // int32 money = 2;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Price::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Price)
  GOOGLE_DCHECK_NE(&from, this);
  const Price* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Price>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Price)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Price)
    MergeFrom(*source);
  }
}

void Price::MergeFrom(const Price& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Price)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
}

void Price::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Price::CopyFrom(const Price& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Price::IsInitialized() const {
  return true;
}

void Price::Swap(Price* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Price::InternalSwap(Price* other) {
  std::swap(duration_, other->duration_);
  std::swap(money_, other->money_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Price::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Price

// int32 duration = 1;
void Price::clear_duration() {
  duration_ = 0;
}
::google::protobuf::int32 Price::duration() const {
  // @@protoc_insertion_point(field_get:Price.duration)
  return duration_;
}
void Price::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:Price.duration)
}

// int32 money = 2;
void Price::clear_money() {
  money_ = 0;
}
::google::protobuf::int32 Price::money() const {
  // @@protoc_insertion_point(field_get:Price.money)
  return money_;
}
void Price::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:Price.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bill::kBalanceFieldNumber;
const int Bill::kConsumeFieldNumber;
const int Bill::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bill::Bill()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Bill)
}
Bill::Bill(const Bill& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&balance_, &from.balance_,
    reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&balance_) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:Bill)
}

void Bill::SharedCtor() {
  ::memset(&balance_, 0, reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&balance_) + sizeof(duration_));
  _cached_size_ = 0;
}

Bill::~Bill() {
  // @@protoc_insertion_point(destructor:Bill)
  SharedDtor();
}

void Bill::SharedDtor() {
}

void Bill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bill::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[7].descriptor;
}

const Bill& Bill::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bill* Bill::New(::google::protobuf::Arena* arena) const {
  Bill* n = new Bill;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bill::Clear() {
// @@protoc_insertion_point(message_clear_start:Bill)
  ::memset(&balance_, 0, reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&balance_) + sizeof(duration_));
}

bool Bill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Bill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 balance = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 consume = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &consume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 duration = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Bill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Bill)
  return false;
#undef DO_
}

void Bill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Bill)
  // int32 balance = 1;
  if (this->balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->balance(), output);
  }

  // int32 consume = 2;
  if (this->consume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->consume(), output);
  }

  // int32 duration = 3;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->duration(), output);
  }

  // @@protoc_insertion_point(serialize_end:Bill)
}

::google::protobuf::uint8* Bill::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Bill)
  // int32 balance = 1;
  if (this->balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->balance(), target);
  }

  // int32 consume = 2;
  if (this->consume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->consume(), target);
  }

  // int32 duration = 3;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->duration(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Bill)
  return target;
}

size_t Bill::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Bill)
  size_t total_size = 0;

  // int32 balance = 1;
  if (this->balance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->balance());
  }

  // int32 consume = 2;
  if (this->consume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->consume());
  }

  // int32 duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bill::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Bill)
  GOOGLE_DCHECK_NE(&from, this);
  const Bill* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bill>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Bill)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Bill)
    MergeFrom(*source);
  }
}

void Bill::MergeFrom(const Bill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Bill)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.balance() != 0) {
    set_balance(from.balance());
  }
  if (from.consume() != 0) {
    set_consume(from.consume());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void Bill::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Bill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bill::CopyFrom(const Bill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Bill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bill::IsInitialized() const {
  return true;
}

void Bill::Swap(Bill* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bill::InternalSwap(Bill* other) {
  std::swap(balance_, other->balance_);
  std::swap(consume_, other->consume_);
  std::swap(duration_, other->duration_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bill::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bill

// int32 balance = 1;
void Bill::clear_balance() {
  balance_ = 0;
}
::google::protobuf::int32 Bill::balance() const {
  // @@protoc_insertion_point(field_get:Bill.balance)
  return balance_;
}
void Bill::set_balance(::google::protobuf::int32 value) {
  
  balance_ = value;
  // @@protoc_insertion_point(field_set:Bill.balance)
}

// int32 consume = 2;
void Bill::clear_consume() {
  consume_ = 0;
}
::google::protobuf::int32 Bill::consume() const {
  // @@protoc_insertion_point(field_get:Bill.consume)
  return consume_;
}
void Bill::set_consume(::google::protobuf::int32 value) {
  
  consume_ = value;
  // @@protoc_insertion_point(field_set:Bill.consume)
}

// int32 duration = 3;
void Bill::clear_duration() {
  duration_ = 0;
}
::google::protobuf::int32 Bill::duration() const {
  // @@protoc_insertion_point(field_get:Bill.duration)
  return duration_;
}
void Bill::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:Bill.duration)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUserIDFieldNumber;
const int UserInfo::kOpenidFieldNumber;
const int UserInfo::kNicknameFieldNumber;
const int UserInfo::kHeadImageFieldNumber;
const int UserInfo::kBalanceFieldNumber;
const int UserInfo::kCouponsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      coupons_(from.coupons_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.openid().size() > 0) {
    openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  headimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.headimage().size() > 0) {
    headimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimage_);
  }
  ::memcpy(&userid_, &from.userid_,
    reinterpret_cast<char*>(&balance_) -
    reinterpret_cast<char*>(&userid_) + sizeof(balance_));
  // @@protoc_insertion_point(copy_constructor:UserInfo)
}

void UserInfo::SharedCtor() {
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, reinterpret_cast<char*>(&balance_) -
    reinterpret_cast<char*>(&userid_) + sizeof(balance_));
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  openid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[8].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:UserInfo)
  coupons_.Clear();
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, reinterpret_cast<char*>(&balance_) -
    reinterpret_cast<char*>(&userid_) + sizeof(balance_));
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 userID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string openid = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_openid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->openid().data(), this->openid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserInfo.openid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserInfo.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes headImage = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_headimage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float balance = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Coupon coupons = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_coupons()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserInfo)
  // int64 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userid(), output);
  }

  // string openid = 2;
  if (this->openid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->openid().data(), this->openid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo.openid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->openid(), output);
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  // bytes headImage = 4;
  if (this->headimage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->headimage(), output);
  }

  // float balance = 5;
  if (this->balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->balance(), output);
  }

  // repeated .Coupon coupons = 6;
  for (unsigned int i = 0, n = this->coupons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->coupons(i), output);
  }

  // @@protoc_insertion_point(serialize_end:UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserInfo)
  // int64 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userid(), target);
  }

  // string openid = 2;
  if (this->openid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->openid().data(), this->openid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo.openid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->openid(), target);
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  // bytes headImage = 4;
  if (this->headimage().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->headimage(), target);
  }

  // float balance = 5;
  if (this->balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->balance(), target);
  }

  // repeated .Coupon coupons = 6;
  for (unsigned int i = 0, n = this->coupons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->coupons(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserInfo)
  size_t total_size = 0;

  // repeated .Coupon coupons = 6;
  {
    unsigned int count = this->coupons_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coupons(i));
    }
  }

  // string openid = 2;
  if (this->openid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->openid());
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // bytes headImage = 4;
  if (this->headimage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->headimage());
  }

  // int64 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  // float balance = 5;
  if (this->balance() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  coupons_.MergeFrom(from.coupons_);
  if (from.openid().size() > 0) {

    openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.headimage().size() > 0) {

    headimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimage_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.balance() != 0) {
    set_balance(from.balance());
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  coupons_.UnsafeArenaSwap(&other->coupons_);
  openid_.Swap(&other->openid_);
  nickname_.Swap(&other->nickname_);
  headimage_.Swap(&other->headimage_);
  std::swap(userid_, other->userid_);
  std::swap(balance_, other->balance_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// int64 userID = 1;
void UserInfo::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UserInfo::userid() const {
  // @@protoc_insertion_point(field_get:UserInfo.userID)
  return userid_;
}
void UserInfo::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:UserInfo.userID)
}

// string openid = 2;
void UserInfo::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::openid() const {
  // @@protoc_insertion_point(field_get:UserInfo.openid)
  return openid_.GetNoArena();
}
void UserInfo::set_openid(const ::std::string& value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserInfo.openid)
}
#if LANG_CXX11
void UserInfo::set_openid(::std::string&& value) {
  
  openid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserInfo.openid)
}
#endif
void UserInfo::set_openid(const char* value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserInfo.openid)
}
void UserInfo::set_openid(const char* value, size_t size) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserInfo.openid)
}
::std::string* UserInfo::mutable_openid() {
  
  // @@protoc_insertion_point(field_mutable:UserInfo.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_openid() {
  // @@protoc_insertion_point(field_release:UserInfo.openid)
  
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    
  } else {
    
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:UserInfo.openid)
}

// string nickname = 3;
void UserInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::nickname() const {
  // @@protoc_insertion_point(field_get:UserInfo.nickname)
  return nickname_.GetNoArena();
}
void UserInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserInfo.nickname)
}
#if LANG_CXX11
void UserInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserInfo.nickname)
}
#endif
void UserInfo::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserInfo.nickname)
}
void UserInfo::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserInfo.nickname)
}
::std::string* UserInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:UserInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:UserInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:UserInfo.nickname)
}

// bytes headImage = 4;
void UserInfo::clear_headimage() {
  headimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::headimage() const {
  // @@protoc_insertion_point(field_get:UserInfo.headImage)
  return headimage_.GetNoArena();
}
void UserInfo::set_headimage(const ::std::string& value) {
  
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserInfo.headImage)
}
#if LANG_CXX11
void UserInfo::set_headimage(::std::string&& value) {
  
  headimage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserInfo.headImage)
}
#endif
void UserInfo::set_headimage(const char* value) {
  
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserInfo.headImage)
}
void UserInfo::set_headimage(const void* value, size_t size) {
  
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserInfo.headImage)
}
::std::string* UserInfo::mutable_headimage() {
  
  // @@protoc_insertion_point(field_mutable:UserInfo.headImage)
  return headimage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_headimage() {
  // @@protoc_insertion_point(field_release:UserInfo.headImage)
  
  return headimage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_headimage(::std::string* headimage) {
  if (headimage != NULL) {
    
  } else {
    
  }
  headimage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimage);
  // @@protoc_insertion_point(field_set_allocated:UserInfo.headImage)
}

// float balance = 5;
void UserInfo::clear_balance() {
  balance_ = 0;
}
float UserInfo::balance() const {
  // @@protoc_insertion_point(field_get:UserInfo.balance)
  return balance_;
}
void UserInfo::set_balance(float value) {
  
  balance_ = value;
  // @@protoc_insertion_point(field_set:UserInfo.balance)
}

// repeated .Coupon coupons = 6;
int UserInfo::coupons_size() const {
  return coupons_.size();
}
void UserInfo::clear_coupons() {
  coupons_.Clear();
}
const ::Coupon& UserInfo::coupons(int index) const {
  // @@protoc_insertion_point(field_get:UserInfo.coupons)
  return coupons_.Get(index);
}
::Coupon* UserInfo::mutable_coupons(int index) {
  // @@protoc_insertion_point(field_mutable:UserInfo.coupons)
  return coupons_.Mutable(index);
}
::Coupon* UserInfo::add_coupons() {
  // @@protoc_insertion_point(field_add:UserInfo.coupons)
  return coupons_.Add();
}
::google::protobuf::RepeatedPtrField< ::Coupon >*
UserInfo::mutable_coupons() {
  // @@protoc_insertion_point(field_mutable_list:UserInfo.coupons)
  return &coupons_;
}
const ::google::protobuf::RepeatedPtrField< ::Coupon >&
UserInfo::coupons() const {
  // @@protoc_insertion_point(field_list:UserInfo.coupons)
  return coupons_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coupon::kTypeFieldNumber;
const int Coupon::kPriceFieldNumber;
const int Coupon::kDiscountsFieldNumber;
const int Coupon::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coupon::Coupon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Coupon)
}
Coupon::Coupon(const Coupon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&discounts_) -
    reinterpret_cast<char*>(&type_) + sizeof(discounts_));
  // @@protoc_insertion_point(copy_constructor:Coupon)
}

void Coupon::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&discounts_) -
    reinterpret_cast<char*>(&type_) + sizeof(discounts_));
  _cached_size_ = 0;
}

Coupon::~Coupon() {
  // @@protoc_insertion_point(destructor:Coupon)
  SharedDtor();
}

void Coupon::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Coupon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Coupon::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[9].descriptor;
}

const Coupon& Coupon::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Coupon* Coupon::New(::google::protobuf::Arena* arena) const {
  Coupon* n = new Coupon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Coupon::Clear() {
// @@protoc_insertion_point(message_clear_start:Coupon)
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&discounts_) -
    reinterpret_cast<char*>(&type_) + sizeof(discounts_));
}

bool Coupon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Coupon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float price = 2;
      case 2: {
        if (tag == 21u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float discounts = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &discounts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comment = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Coupon.comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Coupon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Coupon)
  return false;
#undef DO_
}

void Coupon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Coupon)
  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // float price = 2;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->price(), output);
  }

  // float discounts = 3;
  if (this->discounts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->discounts(), output);
  }

  // string comment = 4;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Coupon.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->comment(), output);
  }

  // @@protoc_insertion_point(serialize_end:Coupon)
}

::google::protobuf::uint8* Coupon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Coupon)
  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // float price = 2;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->price(), target);
  }

  // float discounts = 3;
  if (this->discounts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->discounts(), target);
  }

  // string comment = 4;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Coupon.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->comment(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Coupon)
  return target;
}

size_t Coupon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Coupon)
  size_t total_size = 0;

  // string comment = 4;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // float price = 2;
  if (this->price() != 0) {
    total_size += 1 + 4;
  }

  // float discounts = 3;
  if (this->discounts() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Coupon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Coupon)
  GOOGLE_DCHECK_NE(&from, this);
  const Coupon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Coupon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Coupon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Coupon)
    MergeFrom(*source);
  }
}

void Coupon::MergeFrom(const Coupon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Coupon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.discounts() != 0) {
    set_discounts(from.discounts());
  }
}

void Coupon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Coupon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coupon::CopyFrom(const Coupon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Coupon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coupon::IsInitialized() const {
  return true;
}

void Coupon::Swap(Coupon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coupon::InternalSwap(Coupon* other) {
  comment_.Swap(&other->comment_);
  std::swap(type_, other->type_);
  std::swap(price_, other->price_);
  std::swap(discounts_, other->discounts_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Coupon::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Coupon

// int32 type = 1;
void Coupon::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 Coupon::type() const {
  // @@protoc_insertion_point(field_get:Coupon.type)
  return type_;
}
void Coupon::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Coupon.type)
}

// float price = 2;
void Coupon::clear_price() {
  price_ = 0;
}
float Coupon::price() const {
  // @@protoc_insertion_point(field_get:Coupon.price)
  return price_;
}
void Coupon::set_price(float value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:Coupon.price)
}

// float discounts = 3;
void Coupon::clear_discounts() {
  discounts_ = 0;
}
float Coupon::discounts() const {
  // @@protoc_insertion_point(field_get:Coupon.discounts)
  return discounts_;
}
void Coupon::set_discounts(float value) {
  
  discounts_ = value;
  // @@protoc_insertion_point(field_set:Coupon.discounts)
}

// string comment = 4;
void Coupon::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Coupon::comment() const {
  // @@protoc_insertion_point(field_get:Coupon.comment)
  return comment_.GetNoArena();
}
void Coupon::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Coupon.comment)
}
#if LANG_CXX11
void Coupon::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Coupon.comment)
}
#endif
void Coupon::set_comment(const char* value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Coupon.comment)
}
void Coupon::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Coupon.comment)
}
::std::string* Coupon::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:Coupon.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Coupon::release_comment() {
  // @@protoc_insertion_point(field_release:Coupon.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Coupon::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:Coupon.comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreList::kStoresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreList::StoreList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreList)
}
StoreList::StoreList(const StoreList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& StoreList_StoresEntry_descriptor = protobuf_vr_2eproto::file_level_metadata[10].descriptor;
  stores_.SetAssignDescriptorCallback(
      protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce);
  stores_.SetEntryDescriptor(
      &StoreList_StoresEntry_descriptor);
  stores_.MergeFrom(from.stores_);
  // @@protoc_insertion_point(copy_constructor:StoreList)
}

void StoreList::SharedCtor() {
  const ::google::protobuf::Descriptor*& StoreList_StoresEntry_descriptor = protobuf_vr_2eproto::file_level_metadata[10].descriptor;
  stores_.SetAssignDescriptorCallback(
      protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce);
  stores_.SetEntryDescriptor(
      &StoreList_StoresEntry_descriptor);
  _cached_size_ = 0;
}

StoreList::~StoreList() {
  // @@protoc_insertion_point(destructor:StoreList)
  SharedDtor();
}

void StoreList::SharedDtor() {
}

void StoreList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreList::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[11].descriptor;
}

const StoreList& StoreList::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoreList* StoreList::New(::google::protobuf::Arena* arena) const {
  StoreList* n = new StoreList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreList::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreList)
  stores_.Clear();
}

bool StoreList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, string> stores = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          StoreList_StoresEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::int32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::std::string > > parser(&stores_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StoreList.StoresEntry.value"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreList)
  return false;
#undef DO_
}

void StoreList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreList)
  // map<int32, string> stores = 1;
  if (!this->stores().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "StoreList.StoresEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->stores().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->stores().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->stores().begin();
          it != this->stores().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<StoreList_StoresEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(stores_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[i].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<StoreList_StoresEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->stores().begin();
          it != this->stores().end(); ++it) {
        entry.reset(stores_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:StoreList)
}

::google::protobuf::uint8* StoreList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreList)
  // map<int32, string> stores = 1;
  if (!this->stores().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "StoreList.StoresEntry.value");
      }
    };

    if (deterministic &&
        this->stores().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->stores().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->stores().begin();
          it != this->stores().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<StoreList_StoresEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(stores_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[i].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<StoreList_StoresEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->stores().begin();
          it != this->stores().end(); ++it) {
        entry.reset(stores_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:StoreList)
  return target;
}

size_t StoreList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreList)
  size_t total_size = 0;

  // map<int32, string> stores = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stores_size());
  {
    ::google::protobuf::scoped_ptr<StoreList_StoresEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->stores().begin();
        it != this->stores().end(); ++it) {
      entry.reset(stores_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreList)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreList)
    MergeFrom(*source);
  }
}

void StoreList::MergeFrom(const StoreList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stores_.MergeFrom(from.stores_);
}

void StoreList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreList::CopyFrom(const StoreList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreList::IsInitialized() const {
  return true;
}

void StoreList::Swap(StoreList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreList::InternalSwap(StoreList* other) {
  stores_.Swap(&other->stores_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreList::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoreList

// map<int32, string> stores = 1;
int StoreList::stores_size() const {
  return stores_.size();
}
void StoreList::clear_stores() {
  stores_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
StoreList::stores() const {
  // @@protoc_insertion_point(field_map:StoreList.stores)
  return stores_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
StoreList::mutable_stores() {
  // @@protoc_insertion_point(field_mutable_map:StoreList.stores)
  return stores_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceInfo::kStoreIdFieldNumber;
const int DeviceInfo::kDeviceIdFieldNumber;
const int DeviceInfo::kDeviceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceInfo::DeviceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceInfo)
}
DeviceInfo::DeviceInfo(const DeviceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  devicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devicename().size() > 0) {
    devicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicename_);
  }
  storeid_ = from.storeid_;
  // @@protoc_insertion_point(copy_constructor:DeviceInfo)
}

void DeviceInfo::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storeid_ = 0;
  _cached_size_ = 0;
}

DeviceInfo::~DeviceInfo() {
  // @@protoc_insertion_point(destructor:DeviceInfo)
  SharedDtor();
}

void DeviceInfo::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceInfo::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[12].descriptor;
}

const DeviceInfo& DeviceInfo::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceInfo* DeviceInfo::New(::google::protobuf::Arena* arena) const {
  DeviceInfo* n = new DeviceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInfo)
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storeid_ = 0;
}

bool DeviceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 storeId = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deviceId = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), this->deviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeviceInfo.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deviceName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devicename().data(), this->devicename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeviceInfo.deviceName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceInfo)
  return false;
#undef DO_
}

void DeviceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceInfo)
  // int32 storeId = 1;
  if (this->storeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->storeid(), output);
  }

  // string deviceId = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeviceInfo.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->deviceid(), output);
  }

  // string deviceName = 3;
  if (this->devicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicename().data(), this->devicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeviceInfo.deviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->devicename(), output);
  }

  // @@protoc_insertion_point(serialize_end:DeviceInfo)
}

::google::protobuf::uint8* DeviceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInfo)
  // int32 storeId = 1;
  if (this->storeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->storeid(), target);
  }

  // string deviceId = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeviceInfo.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->deviceid(), target);
  }

  // string deviceName = 3;
  if (this->devicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicename().data(), this->devicename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeviceInfo.deviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->devicename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DeviceInfo)
  return target;
}

size_t DeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInfo)
  size_t total_size = 0;

  // string deviceId = 2;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string deviceName = 3;
  if (this->devicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devicename());
  }

  // int32 storeId = 1;
  if (this->storeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storeid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceInfo)
    MergeFrom(*source);
  }
}

void DeviceInfo::MergeFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.devicename().size() > 0) {

    devicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicename_);
  }
  if (from.storeid() != 0) {
    set_storeid(from.storeid());
  }
}

void DeviceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceInfo::CopyFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceInfo::IsInitialized() const {
  return true;
}

void DeviceInfo::Swap(DeviceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceInfo::InternalSwap(DeviceInfo* other) {
  deviceid_.Swap(&other->deviceid_);
  devicename_.Swap(&other->devicename_);
  std::swap(storeid_, other->storeid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceInfo::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceInfo

// int32 storeId = 1;
void DeviceInfo::clear_storeid() {
  storeid_ = 0;
}
::google::protobuf::int32 DeviceInfo::storeid() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.storeId)
  return storeid_;
}
void DeviceInfo::set_storeid(::google::protobuf::int32 value) {
  
  storeid_ = value;
  // @@protoc_insertion_point(field_set:DeviceInfo.storeId)
}

// string deviceId = 2;
void DeviceInfo::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceInfo::deviceid() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.deviceId)
  return deviceid_.GetNoArena();
}
void DeviceInfo::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeviceInfo.deviceId)
}
#if LANG_CXX11
void DeviceInfo::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeviceInfo.deviceId)
}
#endif
void DeviceInfo::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeviceInfo.deviceId)
}
void DeviceInfo::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeviceInfo.deviceId)
}
::std::string* DeviceInfo::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:DeviceInfo.deviceId)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceInfo::release_deviceid() {
  // @@protoc_insertion_point(field_release:DeviceInfo.deviceId)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceInfo::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:DeviceInfo.deviceId)
}

// string deviceName = 3;
void DeviceInfo::clear_devicename() {
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceInfo::devicename() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.deviceName)
  return devicename_.GetNoArena();
}
void DeviceInfo::set_devicename(const ::std::string& value) {
  
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeviceInfo.deviceName)
}
#if LANG_CXX11
void DeviceInfo::set_devicename(::std::string&& value) {
  
  devicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeviceInfo.deviceName)
}
#endif
void DeviceInfo::set_devicename(const char* value) {
  
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeviceInfo.deviceName)
}
void DeviceInfo::set_devicename(const char* value, size_t size) {
  
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeviceInfo.deviceName)
}
::std::string* DeviceInfo::mutable_devicename() {
  
  // @@protoc_insertion_point(field_mutable:DeviceInfo.deviceName)
  return devicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceInfo::release_devicename() {
  // @@protoc_insertion_point(field_release:DeviceInfo.deviceName)
  
  return devicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceInfo::set_allocated_devicename(::std::string* devicename) {
  if (devicename != NULL) {
    
  } else {
    
  }
  devicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicename);
  // @@protoc_insertion_point(field_set_allocated:DeviceInfo.deviceName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoteControl::kActionFieldNumber;
const int RemoteControl::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoteControl::RemoteControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemoteControl)
}
RemoteControl::RemoteControl(const RemoteControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&action_, &from.action_,
    reinterpret_cast<char*>(&command_) -
    reinterpret_cast<char*>(&action_) + sizeof(command_));
  // @@protoc_insertion_point(copy_constructor:RemoteControl)
}

void RemoteControl::SharedCtor() {
  ::memset(&action_, 0, reinterpret_cast<char*>(&command_) -
    reinterpret_cast<char*>(&action_) + sizeof(command_));
  _cached_size_ = 0;
}

RemoteControl::~RemoteControl() {
  // @@protoc_insertion_point(destructor:RemoteControl)
  SharedDtor();
}

void RemoteControl::SharedDtor() {
}

void RemoteControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoteControl::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[13].descriptor;
}

const RemoteControl& RemoteControl::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoteControl* RemoteControl::New(::google::protobuf::Arena* arena) const {
  RemoteControl* n = new RemoteControl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoteControl::Clear() {
// @@protoc_insertion_point(message_clear_start:RemoteControl)
  ::memset(&action_, 0, reinterpret_cast<char*>(&command_) -
    reinterpret_cast<char*>(&action_) + sizeof(command_));
}

bool RemoteControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemoteControl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 action = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 command = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemoteControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemoteControl)
  return false;
#undef DO_
}

void RemoteControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemoteControl)
  // int32 action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->action(), output);
  }

  // int32 command = 2;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->command(), output);
  }

  // @@protoc_insertion_point(serialize_end:RemoteControl)
}

::google::protobuf::uint8* RemoteControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemoteControl)
  // int32 action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->action(), target);
  }

  // int32 command = 2;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->command(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RemoteControl)
  return target;
}

size_t RemoteControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemoteControl)
  size_t total_size = 0;

  // int32 action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action());
  }

  // int32 command = 2;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->command());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoteControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemoteControl)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoteControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoteControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemoteControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemoteControl)
    MergeFrom(*source);
  }
}

void RemoteControl::MergeFrom(const RemoteControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemoteControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.command() != 0) {
    set_command(from.command());
  }
}

void RemoteControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemoteControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoteControl::CopyFrom(const RemoteControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemoteControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoteControl::IsInitialized() const {
  return true;
}

void RemoteControl::Swap(RemoteControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoteControl::InternalSwap(RemoteControl* other) {
  std::swap(action_, other->action_);
  std::swap(command_, other->command_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoteControl::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoteControl

// int32 action = 1;
void RemoteControl::clear_action() {
  action_ = 0;
}
::google::protobuf::int32 RemoteControl::action() const {
  // @@protoc_insertion_point(field_get:RemoteControl.action)
  return action_;
}
void RemoteControl::set_action(::google::protobuf::int32 value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:RemoteControl.action)
}

// int32 command = 2;
void RemoteControl::clear_command() {
  command_ = 0;
}
::google::protobuf::int32 RemoteControl::command() const {
  // @@protoc_insertion_point(field_get:RemoteControl.command)
  return command_;
}
void RemoteControl::set_command(::google::protobuf::int32 value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:RemoteControl.command)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Activity::kTypeFieldNumber;
const int Activity::kCouponFieldNumber;
const int Activity::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Activity::Activity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Activity)
}
Activity::Activity(const Activity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_coupon()) {
    coupon_ = new ::Coupon(*from.coupon_);
  } else {
    coupon_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:Activity)
}

void Activity::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&coupon_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&coupon_) + sizeof(type_));
  _cached_size_ = 0;
}

Activity::~Activity() {
  // @@protoc_insertion_point(destructor:Activity)
  SharedDtor();
}

void Activity::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete coupon_;
  }
}

void Activity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Activity::descriptor() {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[14].descriptor;
}

const Activity& Activity::default_instance() {
  protobuf_vr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Activity* Activity::New(::google::protobuf::Arena* arena) const {
  Activity* n = new Activity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Activity::Clear() {
// @@protoc_insertion_point(message_clear_start:Activity)
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coupon_ != NULL) {
    delete coupon_;
  }
  coupon_ = NULL;
  type_ = 0;
}

bool Activity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Activity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Coupon coupon = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coupon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comment = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Activity.comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Activity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Activity)
  return false;
#undef DO_
}

void Activity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Activity)
  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // .Coupon coupon = 2;
  if (this->has_coupon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->coupon_, output);
  }

  // string comment = 3;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Activity.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->comment(), output);
  }

  // @@protoc_insertion_point(serialize_end:Activity)
}

::google::protobuf::uint8* Activity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Activity)
  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // .Coupon coupon = 2;
  if (this->has_coupon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->coupon_, false, target);
  }

  // string comment = 3;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Activity.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->comment(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Activity)
  return target;
}

size_t Activity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Activity)
  size_t total_size = 0;

  // string comment = 3;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // .Coupon coupon = 2;
  if (this->has_coupon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->coupon_);
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Activity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Activity)
  GOOGLE_DCHECK_NE(&from, this);
  const Activity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Activity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Activity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Activity)
    MergeFrom(*source);
  }
}

void Activity::MergeFrom(const Activity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Activity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_coupon()) {
    mutable_coupon()->::Coupon::MergeFrom(from.coupon());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Activity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Activity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Activity::CopyFrom(const Activity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Activity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Activity::IsInitialized() const {
  return true;
}

void Activity::Swap(Activity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Activity::InternalSwap(Activity* other) {
  comment_.Swap(&other->comment_);
  std::swap(coupon_, other->coupon_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Activity::GetMetadata() const {
  protobuf_vr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vr_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Activity

// int32 type = 1;
void Activity::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 Activity::type() const {
  // @@protoc_insertion_point(field_get:Activity.type)
  return type_;
}
void Activity::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Activity.type)
}

// .Coupon coupon = 2;
bool Activity::has_coupon() const {
  return this != internal_default_instance() && coupon_ != NULL;
}
void Activity::clear_coupon() {
  if (GetArenaNoVirtual() == NULL && coupon_ != NULL) delete coupon_;
  coupon_ = NULL;
}
const ::Coupon& Activity::coupon() const {
  // @@protoc_insertion_point(field_get:Activity.coupon)
  return coupon_ != NULL ? *coupon_
                         : *::Coupon::internal_default_instance();
}
::Coupon* Activity::mutable_coupon() {
  
  if (coupon_ == NULL) {
    coupon_ = new ::Coupon;
  }
  // @@protoc_insertion_point(field_mutable:Activity.coupon)
  return coupon_;
}
::Coupon* Activity::release_coupon() {
  // @@protoc_insertion_point(field_release:Activity.coupon)
  
  ::Coupon* temp = coupon_;
  coupon_ = NULL;
  return temp;
}
void Activity::set_allocated_coupon(::Coupon* coupon) {
  delete coupon_;
  coupon_ = coupon;
  if (coupon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Activity.coupon)
}

// string comment = 3;
void Activity::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Activity::comment() const {
  // @@protoc_insertion_point(field_get:Activity.comment)
  return comment_.GetNoArena();
}
void Activity::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Activity.comment)
}
#if LANG_CXX11
void Activity::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Activity.comment)
}
#endif
void Activity::set_comment(const char* value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Activity.comment)
}
void Activity::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Activity.comment)
}
::std::string* Activity::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:Activity.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Activity::release_comment() {
  // @@protoc_insertion_point(field_release:Activity.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Activity::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:Activity.comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
